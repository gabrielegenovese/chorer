Concuerror v0.17 ('2079a06') started at 15 Sep 2017 13:09:28
 Options:
  [{after_timeout,infinity},
   {assertions_only,false},
   {assume_racing,false},
   {depth_bound,500},
   {disable_sleep_sets,false},
   {dpor,optimal},
   {entry_point,{many_kill_2,test,[]}},
   {exclude_module,[]},
   {files,["/home/stavros/git/Concuerror/tests/suites/dpor_tests/src/many_kill_2.erl"]},
   {ignore_error,[]},
   {instant_delivery,true},
   {interleaving_bound,infinity},
   {keep_going,true},
   {non_racing_system,[]},
   {print_depth,20},
   {quiet,true},
   {scheduling,round_robin},
   {scheduling_bound_type,none},
   {show_races,false},
   {strict_scheduling,false},
   {symbolic_names,true},
   {timeout,infinity},
   {treat_as_normal,[]},
   {use_receive_patterns,false}]
################################################################################
Interleaving #1
--------------------------------------------------------------------------------
Errors found:
* At step 10 process P.1 exited abnormally
    Reason:
      not_normal
    Stacktrace:
      []
--------------------------------------------------------------------------------
Event trace:
   1: P: table = ets:new(table, [named_table,public])
    in many_kill_2.erl line 10
   2: P: {P.1,#Ref<0.1288558162.3573022721.137746>} = erlang:spawn_opt({erlang,apply,[#Fun<many_kill_2.'-test/0-fun-0-'.0>,[]],[monitor]})
    in erlang.erl line 2717
   3: P: P.2 = erlang:spawn(erlang, apply, [#Fun<many_kill_2.'-test/0-fun-1-'.0>,[]])
    in erlang.erl line 2673
   4: P: P.3 = erlang:spawn(erlang, apply, [#Fun<many_kill_2.'-test/0-fun-1-'.0>,[]])
    in erlang.erl line 2673
   5: P.2: true = ets:insert(table, {foo})
    in many_kill_2.erl line 17
   6: P.2: true = erlang:exit(P.1, not_normal)
    in many_kill_2.erl line 20
   7: P.2: exits normally
   8: P.3: true = erlang:exit(P.1, not_normal)
    in many_kill_2.erl line 20
   9: P.3: exits normally
  10: P.1: exits abnormally (not_normal)
  11: P.1: {'DOWN',#Ref<0.1288558162.3573022721.137746>,process,P.1,not_normal} = erlang:send(P, {'DOWN',#Ref<0.1288558162.3573022721.137746>,process,P.1,not_normal})
    (while exiting)
  12: P: receives message ({'DOWN',#Ref<0.1288558162.3573022721.137746>,process,P.1,not_normal})
    in many_kill_2.erl line 25
  13: P: [{foo}] = ets:lookup(table, foo)
    in many_kill_2.erl line 27
  14: P: exits normally
  15: P: true = ets:delete(table)
    (while exiting)
################################################################################
Interleaving #2
--------------------------------------------------------------------------------
Errors found:
* At step 8 process P.1 exited abnormally
    Reason:
      not_normal
    Stacktrace:
      []
--------------------------------------------------------------------------------
Event trace:
   1: P: table = ets:new(table, [named_table,public])
    in many_kill_2.erl line 10
   2: P: {P.1,#Ref<0.1288558162.3573022721.137746>} = erlang:spawn_opt({erlang,apply,[#Fun<many_kill_2.'-test/0-fun-0-'.0>,[]],[monitor]})
    in erlang.erl line 2717
   3: P: P.2 = erlang:spawn(erlang, apply, [#Fun<many_kill_2.'-test/0-fun-1-'.0>,[]])
    in erlang.erl line 2673
   4: P: P.3 = erlang:spawn(erlang, apply, [#Fun<many_kill_2.'-test/0-fun-1-'.0>,[]])
    in erlang.erl line 2673
   5: P.2: true = ets:insert(table, {foo})
    in many_kill_2.erl line 17
   6: P.3: true = erlang:exit(P.1, not_normal)
    in many_kill_2.erl line 20
   7: P.3: exits normally
   8: P.1: exits abnormally (not_normal)
   9: P.1: {'DOWN',#Ref<0.1288558162.3573022721.137746>,process,P.1,not_normal} = erlang:send(P, {'DOWN',#Ref<0.1288558162.3573022721.137746>,process,P.1,not_normal})
    (while exiting)
  10: P.2: true = erlang:exit(P.1, not_normal)
    in many_kill_2.erl line 20
  11: P.2: exits normally
  12: P: receives message ({'DOWN',#Ref<0.1288558162.3573022721.137746>,process,P.1,not_normal})
    in many_kill_2.erl line 25
  13: P: [{foo}] = ets:lookup(table, foo)
    in many_kill_2.erl line 27
  14: P: exits normally
  15: P: true = ets:delete(table)
    (while exiting)
################################################################################
Interleaving #3
--------------------------------------------------------------------------------
Errors found:
* At step 7 process P.1 exited abnormally
    Reason:
      not_normal
    Stacktrace:
      []
* At step 11 process P exited abnormally
    Reason:
      {{badmatch,false},
       [{many_kill_2,test,0,
                     [{file,"/home/stavros/git/Concuerror/tests/suites/dpor_tests/src/many_kill_2.erl"},
                      {line,27}]}]}
    Stacktrace:
      [{many_kill_2,test,0,
                    [{file,"/home/stavros/git/Concuerror/tests/suites/dpor_tests/src/many_kill_2.erl"},
                     {line,27}]}]
* At step 14 process P.2 exited abnormally
    Reason:
      {badarg,[{ets,insert,
                    [table,{foo}],
                    [17,
                     {file,"/home/stavros/git/Concuerror/tests/suites/dpor_tests/src/many_kill_2.erl"}]},
               {many_kill_2,'-test/0-fun-1-',2,
                            [{file,"/home/stavros/git/Concuerror/tests/suites/dpor_tests/src/many_kill_2.erl"},
                             {line,17}]}]}
    Stacktrace:
      [{ets,insert,
            [table,{foo}],
            [17,
             {file,"/home/stavros/git/Concuerror/tests/suites/dpor_tests/src/many_kill_2.erl"}]},
       {many_kill_2,'-test/0-fun-1-',2,
                    [{file,"/home/stavros/git/Concuerror/tests/suites/dpor_tests/src/many_kill_2.erl"},
                     {line,17}]}]
--------------------------------------------------------------------------------
Event trace:
   1: P: table = ets:new(table, [named_table,public])
    in many_kill_2.erl line 10
   2: P: {P.1,#Ref<0.1288558162.3573022721.137746>} = erlang:spawn_opt({erlang,apply,[#Fun<many_kill_2.'-test/0-fun-0-'.0>,[]],[monitor]})
    in erlang.erl line 2717
   3: P: P.2 = erlang:spawn(erlang, apply, [#Fun<many_kill_2.'-test/0-fun-1-'.0>,[]])
    in erlang.erl line 2673
   4: P: P.3 = erlang:spawn(erlang, apply, [#Fun<many_kill_2.'-test/0-fun-1-'.0>,[]])
    in erlang.erl line 2673
   5: P.3: true = erlang:exit(P.1, not_normal)
    in many_kill_2.erl line 20
   6: P.3: exits normally
   7: P.1: exits abnormally (not_normal)
   8: P.1: {'DOWN',#Ref<0.1288558162.3573022721.137746>,process,P.1,not_normal} = erlang:send(P, {'DOWN',#Ref<0.1288558162.3573022721.137746>,process,P.1,not_normal})
    (while exiting)
   9: P: receives message ({'DOWN',#Ref<0.1288558162.3573022721.137746>,process,P.1,not_normal})
    in many_kill_2.erl line 25
  10: P: [] = ets:lookup(table, foo)
    in many_kill_2.erl line 27
  11: P: exits abnormally ({{badmatch,false},[{many_kill_2,test,0,[{file,[47,104,111,109,101,47,115,116,97|...]},{line,27}]}]})
  12: P: true = ets:delete(table)
    (while exiting)
  13: P.2: Exception badarg raised by: ets:insert(table, {foo})
    in many_kill_2.erl line 17
  14: P.2: exits abnormally ({badarg,[{ets,insert,[table,{foo}],[17,{file,[47,104,111,109,101,47,115,116|...]}]},{many_kill_2,'-test/0-fun-1-',2,[{file,[47,104,111,109,101,47,115,116|...]},{line,17}]}]})
################################################################################
Interleaving #4
--------------------------------------------------------------------------------
Errors found:
* At step 7 process P.1 exited abnormally
    Reason:
      not_normal
    Stacktrace:
      []
* At step 11 process P exited abnormally
    Reason:
      {{badmatch,false},
       [{many_kill_2,test,0,
                     [{file,"/home/stavros/git/Concuerror/tests/suites/dpor_tests/src/many_kill_2.erl"},
                      {line,27}]}]}
    Stacktrace:
      [{many_kill_2,test,0,
                    [{file,"/home/stavros/git/Concuerror/tests/suites/dpor_tests/src/many_kill_2.erl"},
                     {line,27}]}]
--------------------------------------------------------------------------------
Event trace:
   1: P: table = ets:new(table, [named_table,public])
    in many_kill_2.erl line 10
   2: P: {P.1,#Ref<0.1288558162.3573022721.137746>} = erlang:spawn_opt({erlang,apply,[#Fun<many_kill_2.'-test/0-fun-0-'.0>,[]],[monitor]})
    in erlang.erl line 2717
   3: P: P.2 = erlang:spawn(erlang, apply, [#Fun<many_kill_2.'-test/0-fun-1-'.0>,[]])
    in erlang.erl line 2673
   4: P: P.3 = erlang:spawn(erlang, apply, [#Fun<many_kill_2.'-test/0-fun-1-'.0>,[]])
    in erlang.erl line 2673
   5: P.3: true = erlang:exit(P.1, not_normal)
    in many_kill_2.erl line 20
   6: P.3: exits normally
   7: P.1: exits abnormally (not_normal)
   8: P.1: {'DOWN',#Ref<0.1288558162.3573022721.137746>,process,P.1,not_normal} = erlang:send(P, {'DOWN',#Ref<0.1288558162.3573022721.137746>,process,P.1,not_normal})
    (while exiting)
   9: P: receives message ({'DOWN',#Ref<0.1288558162.3573022721.137746>,process,P.1,not_normal})
    in many_kill_2.erl line 25
  10: P: [] = ets:lookup(table, foo)
    in many_kill_2.erl line 27
  11: P: exits abnormally ({{badmatch,false},[{many_kill_2,test,0,[{file,[47,104,111,109,101,47,115,116,97|...]},{line,27}]}]})
  12: P.2: true = ets:insert(table, {foo})
    in many_kill_2.erl line 17
  13: P.2: true = erlang:exit(P.1, not_normal)
    in many_kill_2.erl line 20
  14: P.2: exits normally
  15: P: true = ets:delete(table)
    (while exiting)
################################################################################
Exploration completed!
################################################################################
Tips:
--------------------------------------------------------------------------------
An abnormal exit signal was sent to a process. This is probably the worst thing that can happen race-wise, as any other side-effecting operation races with the arrival of the signal. If the test produces too many interleavings consider refactoring your code.
Increase '--print_depth' if output/graph contains "...".

################################################################################
Info:
--------------------------------------------------------------------------------
Instrumented & loaded module many_kill_2
Automatically instrumented module io_lib
Automatically instrumented module gen_server
Automatically instrumented module erlang
You can see pairs of racing instructions (in the report and '--graph') with '--show_races true'
Continuing after error (-k)

################################################################################
Done at 15 Sep 2017 13:09:29 (Exit status: error)
  Summary: 4 errors, 4/4 interleavings explored
