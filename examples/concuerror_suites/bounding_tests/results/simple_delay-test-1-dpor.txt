################################################################################

Concuerror 0.14 (ec1402b) started with options:
  [{after_timeout,infinity},
   {assertions_only,false},
   {assume_racing,false},
   {depth_bound,5000},
   {entry_point,{simple_delay,test,[]}},
   {files,["/home/stavros/git/Concuerror/tests/suites/bounding_tests/src/simple_delay.erl"]},
   {ignore_error,[]},
   {instant_delivery,true},
   {interleaving_bound,infinity},
   {keep_going,true},
   {non_racing_system,[]},
   {optimal,true},
   {print_depth,20},
   {scheduling,round_robin},
   {scheduling_bound,1},
   {scheduling_bound_type,simple},
   {show_races,false},
   {strict_scheduling,false},
   {symbolic_names,true},
   {timeout,infinity},
   {treat_as_normal,[]}]
################################################################################

Erroneous interleaving 1:
* Blocked at a 'receive' (when all other processes have exited):
    P in simple_delay.erl line 16
--------------------------------------------------------------------------------

Interleaving info:
   1: P: table = ets:new(table, [public,named_table])
    in simple_delay.erl line 12
   2: P: true = ets:insert(table, {x,0})
    in simple_delay.erl line 23
   3: P: P.1 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   4: P: P.2 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   5: P: P.3 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   6: P: P.4 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   7: P: P.5 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   8: P: P.6 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   9: P: P.7 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  10: P: P.8 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  11: P: P.9 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  12: P: P.10 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  13: P.1: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  14: P.1: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  15: P.1: exits normally
  16: P.2: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  17: P.2: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  18: P.2: exits normally
  19: P.3: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  20: P.3: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  21: P.3: exits normally
  22: P.4: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  23: P.4: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  24: P.4: exits normally
  25: P.5: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  26: P.5: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  27: P.5: exits normally
  28: P.6: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  29: P.6: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  30: P.6: exits normally
  31: P.7: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  32: P.7: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  33: P.7: exits normally
  34: P.8: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  35: P.8: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  36: P.8: exits normally
  37: P.9: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  38: P.9: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  39: P.9: exits normally
  40: P.10: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  41: P.10: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  42: P.10: exits normally
################################################################################

Erroneous interleaving 2:
* Blocked at a 'receive' (when all other processes have exited):
    P in simple_delay.erl line 16
--------------------------------------------------------------------------------

Interleaving info:
   1: P: table = ets:new(table, [public,named_table])
    in simple_delay.erl line 12
   2: P: true = ets:insert(table, {x,0})
    in simple_delay.erl line 23
   3: P: P.1 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   4: P: P.2 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   5: P: P.3 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   6: P: P.4 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   7: P: P.5 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   8: P: P.6 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   9: P: P.7 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  10: P: P.8 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  11: P: P.9 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  12: P: P.10 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  13: P.1: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  14: P.1: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  15: P.1: exits normally
  16: P.2: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  17: P.2: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  18: P.2: exits normally
  19: P.3: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  20: P.3: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  21: P.3: exits normally
  22: P.4: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  23: P.4: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  24: P.4: exits normally
  25: P.5: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  26: P.5: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  27: P.5: exits normally
  28: P.6: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  29: P.6: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  30: P.6: exits normally
  31: P.7: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  32: P.7: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  33: P.7: exits normally
  34: P.8: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  35: P.8: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  36: P.8: exits normally
  37: P.9: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  38: P.10: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  39: P.10: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  40: P.10: exits normally
  41: P.9: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  42: P.9: exits normally
################################################################################

Erroneous interleaving 3:
* Blocked at a 'receive' (when all other processes have exited):
    P in simple_delay.erl line 16
--------------------------------------------------------------------------------

Interleaving info:
   1: P: table = ets:new(table, [public,named_table])
    in simple_delay.erl line 12
   2: P: true = ets:insert(table, {x,0})
    in simple_delay.erl line 23
   3: P: P.1 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   4: P: P.2 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   5: P: P.3 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   6: P: P.4 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   7: P: P.5 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   8: P: P.6 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   9: P: P.7 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  10: P: P.8 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  11: P: P.9 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  12: P: P.10 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  13: P.1: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  14: P.1: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  15: P.1: exits normally
  16: P.2: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  17: P.2: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  18: P.2: exits normally
  19: P.3: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  20: P.3: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  21: P.3: exits normally
  22: P.4: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  23: P.4: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  24: P.4: exits normally
  25: P.5: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  26: P.5: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  27: P.5: exits normally
  28: P.6: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  29: P.6: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  30: P.6: exits normally
  31: P.7: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  32: P.7: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  33: P.7: exits normally
  34: P.8: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  35: P.8: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  36: P.8: exits normally
  37: P.10: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  38: P.10: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  39: P.10: exits normally
  40: P.9: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  41: P.9: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  42: P.9: exits normally
################################################################################

Erroneous interleaving 4:
* Blocked at a 'receive' (when all other processes have exited):
    P in simple_delay.erl line 16
--------------------------------------------------------------------------------

Interleaving info:
   1: P: table = ets:new(table, [public,named_table])
    in simple_delay.erl line 12
   2: P: true = ets:insert(table, {x,0})
    in simple_delay.erl line 23
   3: P: P.1 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   4: P: P.2 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   5: P: P.3 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   6: P: P.4 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   7: P: P.5 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   8: P: P.6 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   9: P: P.7 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  10: P: P.8 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  11: P: P.9 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  12: P: P.10 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  13: P.1: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  14: P.1: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  15: P.1: exits normally
  16: P.2: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  17: P.2: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  18: P.2: exits normally
  19: P.3: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  20: P.3: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  21: P.3: exits normally
  22: P.4: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  23: P.4: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  24: P.4: exits normally
  25: P.5: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  26: P.5: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  27: P.5: exits normally
  28: P.6: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  29: P.6: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  30: P.6: exits normally
  31: P.7: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  32: P.7: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  33: P.7: exits normally
  34: P.8: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  35: P.9: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  36: P.9: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  37: P.9: exits normally
  38: P.10: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  39: P.10: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  40: P.10: exits normally
  41: P.8: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  42: P.8: exits normally
################################################################################

Erroneous interleaving 5:
* Blocked at a 'receive' (when all other processes have exited):
    P in simple_delay.erl line 16
--------------------------------------------------------------------------------

Interleaving info:
   1: P: table = ets:new(table, [public,named_table])
    in simple_delay.erl line 12
   2: P: true = ets:insert(table, {x,0})
    in simple_delay.erl line 23
   3: P: P.1 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   4: P: P.2 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   5: P: P.3 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   6: P: P.4 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   7: P: P.5 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   8: P: P.6 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   9: P: P.7 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  10: P: P.8 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  11: P: P.9 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  12: P: P.10 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  13: P.1: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  14: P.1: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  15: P.1: exits normally
  16: P.2: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  17: P.2: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  18: P.2: exits normally
  19: P.3: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  20: P.3: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  21: P.3: exits normally
  22: P.4: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  23: P.4: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  24: P.4: exits normally
  25: P.5: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  26: P.5: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  27: P.5: exits normally
  28: P.6: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  29: P.6: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  30: P.6: exits normally
  31: P.7: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  32: P.7: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  33: P.7: exits normally
  34: P.9: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  35: P.9: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  36: P.9: exits normally
  37: P.10: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  38: P.10: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  39: P.10: exits normally
  40: P.8: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  41: P.8: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  42: P.8: exits normally
################################################################################

Erroneous interleaving 6:
* Blocked at a 'receive' (when all other processes have exited):
    P in simple_delay.erl line 16
--------------------------------------------------------------------------------

Interleaving info:
   1: P: table = ets:new(table, [public,named_table])
    in simple_delay.erl line 12
   2: P: true = ets:insert(table, {x,0})
    in simple_delay.erl line 23
   3: P: P.1 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   4: P: P.2 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   5: P: P.3 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   6: P: P.4 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   7: P: P.5 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   8: P: P.6 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   9: P: P.7 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  10: P: P.8 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  11: P: P.9 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  12: P: P.10 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  13: P.1: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  14: P.1: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  15: P.1: exits normally
  16: P.2: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  17: P.2: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  18: P.2: exits normally
  19: P.3: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  20: P.3: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  21: P.3: exits normally
  22: P.4: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  23: P.4: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  24: P.4: exits normally
  25: P.5: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  26: P.5: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  27: P.5: exits normally
  28: P.6: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  29: P.6: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  30: P.6: exits normally
  31: P.7: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  32: P.8: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  33: P.8: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  34: P.8: exits normally
  35: P.9: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  36: P.9: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  37: P.9: exits normally
  38: P.10: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  39: P.10: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  40: P.10: exits normally
  41: P.7: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  42: P.7: exits normally
################################################################################

Erroneous interleaving 7:
* Blocked at a 'receive' (when all other processes have exited):
    P in simple_delay.erl line 16
--------------------------------------------------------------------------------

Interleaving info:
   1: P: table = ets:new(table, [public,named_table])
    in simple_delay.erl line 12
   2: P: true = ets:insert(table, {x,0})
    in simple_delay.erl line 23
   3: P: P.1 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   4: P: P.2 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   5: P: P.3 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   6: P: P.4 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   7: P: P.5 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   8: P: P.6 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   9: P: P.7 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  10: P: P.8 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  11: P: P.9 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  12: P: P.10 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  13: P.1: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  14: P.1: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  15: P.1: exits normally
  16: P.2: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  17: P.2: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  18: P.2: exits normally
  19: P.3: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  20: P.3: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  21: P.3: exits normally
  22: P.4: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  23: P.4: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  24: P.4: exits normally
  25: P.5: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  26: P.5: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  27: P.5: exits normally
  28: P.6: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  29: P.6: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  30: P.6: exits normally
  31: P.8: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  32: P.8: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  33: P.8: exits normally
  34: P.9: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  35: P.9: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  36: P.9: exits normally
  37: P.10: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  38: P.10: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  39: P.10: exits normally
  40: P.7: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  41: P.7: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  42: P.7: exits normally
################################################################################

Erroneous interleaving 8:
* Blocked at a 'receive' (when all other processes have exited):
    P in simple_delay.erl line 16
--------------------------------------------------------------------------------

Interleaving info:
   1: P: table = ets:new(table, [public,named_table])
    in simple_delay.erl line 12
   2: P: true = ets:insert(table, {x,0})
    in simple_delay.erl line 23
   3: P: P.1 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   4: P: P.2 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   5: P: P.3 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   6: P: P.4 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   7: P: P.5 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   8: P: P.6 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   9: P: P.7 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  10: P: P.8 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  11: P: P.9 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  12: P: P.10 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  13: P.1: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  14: P.1: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  15: P.1: exits normally
  16: P.2: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  17: P.2: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  18: P.2: exits normally
  19: P.3: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  20: P.3: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  21: P.3: exits normally
  22: P.4: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  23: P.4: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  24: P.4: exits normally
  25: P.5: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  26: P.5: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  27: P.5: exits normally
  28: P.6: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  29: P.7: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  30: P.7: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  31: P.7: exits normally
  32: P.8: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  33: P.8: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  34: P.8: exits normally
  35: P.9: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  36: P.9: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  37: P.9: exits normally
  38: P.10: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  39: P.10: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  40: P.10: exits normally
  41: P.6: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  42: P.6: exits normally
################################################################################

Erroneous interleaving 9:
* Blocked at a 'receive' (when all other processes have exited):
    P in simple_delay.erl line 16
--------------------------------------------------------------------------------

Interleaving info:
   1: P: table = ets:new(table, [public,named_table])
    in simple_delay.erl line 12
   2: P: true = ets:insert(table, {x,0})
    in simple_delay.erl line 23
   3: P: P.1 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   4: P: P.2 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   5: P: P.3 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   6: P: P.4 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   7: P: P.5 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   8: P: P.6 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   9: P: P.7 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  10: P: P.8 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  11: P: P.9 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  12: P: P.10 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  13: P.1: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  14: P.1: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  15: P.1: exits normally
  16: P.2: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  17: P.2: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  18: P.2: exits normally
  19: P.3: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  20: P.3: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  21: P.3: exits normally
  22: P.4: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  23: P.4: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  24: P.4: exits normally
  25: P.5: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  26: P.5: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  27: P.5: exits normally
  28: P.7: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  29: P.7: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  30: P.7: exits normally
  31: P.8: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  32: P.8: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  33: P.8: exits normally
  34: P.9: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  35: P.9: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  36: P.9: exits normally
  37: P.10: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  38: P.10: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  39: P.10: exits normally
  40: P.6: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  41: P.6: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  42: P.6: exits normally
################################################################################

Erroneous interleaving 10:
* Blocked at a 'receive' (when all other processes have exited):
    P in simple_delay.erl line 16
--------------------------------------------------------------------------------

Interleaving info:
   1: P: table = ets:new(table, [public,named_table])
    in simple_delay.erl line 12
   2: P: true = ets:insert(table, {x,0})
    in simple_delay.erl line 23
   3: P: P.1 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   4: P: P.2 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   5: P: P.3 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   6: P: P.4 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   7: P: P.5 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   8: P: P.6 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   9: P: P.7 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  10: P: P.8 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  11: P: P.9 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  12: P: P.10 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  13: P.1: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  14: P.1: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  15: P.1: exits normally
  16: P.2: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  17: P.2: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  18: P.2: exits normally
  19: P.3: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  20: P.3: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  21: P.3: exits normally
  22: P.4: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  23: P.4: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  24: P.4: exits normally
  25: P.5: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  26: P.6: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  27: P.6: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  28: P.6: exits normally
  29: P.7: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  30: P.7: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  31: P.7: exits normally
  32: P.8: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  33: P.8: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  34: P.8: exits normally
  35: P.9: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  36: P.9: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  37: P.9: exits normally
  38: P.10: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  39: P.10: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  40: P.10: exits normally
  41: P.5: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  42: P.5: exits normally
################################################################################

Erroneous interleaving 11:
* Blocked at a 'receive' (when all other processes have exited):
    P in simple_delay.erl line 16
--------------------------------------------------------------------------------

Interleaving info:
   1: P: table = ets:new(table, [public,named_table])
    in simple_delay.erl line 12
   2: P: true = ets:insert(table, {x,0})
    in simple_delay.erl line 23
   3: P: P.1 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   4: P: P.2 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   5: P: P.3 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   6: P: P.4 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   7: P: P.5 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   8: P: P.6 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   9: P: P.7 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  10: P: P.8 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  11: P: P.9 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  12: P: P.10 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  13: P.1: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  14: P.1: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  15: P.1: exits normally
  16: P.2: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  17: P.2: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  18: P.2: exits normally
  19: P.3: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  20: P.3: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  21: P.3: exits normally
  22: P.4: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  23: P.4: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  24: P.4: exits normally
  25: P.6: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  26: P.6: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  27: P.6: exits normally
  28: P.7: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  29: P.7: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  30: P.7: exits normally
  31: P.8: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  32: P.8: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  33: P.8: exits normally
  34: P.9: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  35: P.9: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  36: P.9: exits normally
  37: P.10: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  38: P.10: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  39: P.10: exits normally
  40: P.5: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  41: P.5: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  42: P.5: exits normally
################################################################################

Erroneous interleaving 12:
* Blocked at a 'receive' (when all other processes have exited):
    P in simple_delay.erl line 16
--------------------------------------------------------------------------------

Interleaving info:
   1: P: table = ets:new(table, [public,named_table])
    in simple_delay.erl line 12
   2: P: true = ets:insert(table, {x,0})
    in simple_delay.erl line 23
   3: P: P.1 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   4: P: P.2 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   5: P: P.3 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   6: P: P.4 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   7: P: P.5 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   8: P: P.6 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   9: P: P.7 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  10: P: P.8 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  11: P: P.9 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  12: P: P.10 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  13: P.1: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  14: P.1: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  15: P.1: exits normally
  16: P.2: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  17: P.2: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  18: P.2: exits normally
  19: P.3: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  20: P.3: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  21: P.3: exits normally
  22: P.4: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  23: P.5: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  24: P.5: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  25: P.5: exits normally
  26: P.6: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  27: P.6: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  28: P.6: exits normally
  29: P.7: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  30: P.7: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  31: P.7: exits normally
  32: P.8: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  33: P.8: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  34: P.8: exits normally
  35: P.9: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  36: P.9: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  37: P.9: exits normally
  38: P.10: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  39: P.10: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  40: P.10: exits normally
  41: P.4: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  42: P.4: exits normally
################################################################################

Erroneous interleaving 13:
* Blocked at a 'receive' (when all other processes have exited):
    P in simple_delay.erl line 16
--------------------------------------------------------------------------------

Interleaving info:
   1: P: table = ets:new(table, [public,named_table])
    in simple_delay.erl line 12
   2: P: true = ets:insert(table, {x,0})
    in simple_delay.erl line 23
   3: P: P.1 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   4: P: P.2 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   5: P: P.3 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   6: P: P.4 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   7: P: P.5 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   8: P: P.6 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   9: P: P.7 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  10: P: P.8 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  11: P: P.9 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  12: P: P.10 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  13: P.1: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  14: P.1: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  15: P.1: exits normally
  16: P.2: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  17: P.2: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  18: P.2: exits normally
  19: P.3: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  20: P.3: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  21: P.3: exits normally
  22: P.5: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  23: P.5: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  24: P.5: exits normally
  25: P.6: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  26: P.6: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  27: P.6: exits normally
  28: P.7: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  29: P.7: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  30: P.7: exits normally
  31: P.8: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  32: P.8: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  33: P.8: exits normally
  34: P.9: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  35: P.9: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  36: P.9: exits normally
  37: P.10: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  38: P.10: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  39: P.10: exits normally
  40: P.4: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  41: P.4: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  42: P.4: exits normally
################################################################################

Erroneous interleaving 14:
* Blocked at a 'receive' (when all other processes have exited):
    P in simple_delay.erl line 16
--------------------------------------------------------------------------------

Interleaving info:
   1: P: table = ets:new(table, [public,named_table])
    in simple_delay.erl line 12
   2: P: true = ets:insert(table, {x,0})
    in simple_delay.erl line 23
   3: P: P.1 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   4: P: P.2 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   5: P: P.3 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   6: P: P.4 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   7: P: P.5 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   8: P: P.6 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   9: P: P.7 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  10: P: P.8 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  11: P: P.9 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  12: P: P.10 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  13: P.1: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  14: P.1: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  15: P.1: exits normally
  16: P.2: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  17: P.2: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  18: P.2: exits normally
  19: P.3: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  20: P.4: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  21: P.4: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  22: P.4: exits normally
  23: P.5: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  24: P.5: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  25: P.5: exits normally
  26: P.6: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  27: P.6: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  28: P.6: exits normally
  29: P.7: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  30: P.7: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  31: P.7: exits normally
  32: P.8: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  33: P.8: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  34: P.8: exits normally
  35: P.9: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  36: P.9: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  37: P.9: exits normally
  38: P.10: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  39: P.10: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  40: P.10: exits normally
  41: P.3: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  42: P.3: exits normally
################################################################################

Erroneous interleaving 15:
* Blocked at a 'receive' (when all other processes have exited):
    P in simple_delay.erl line 16
--------------------------------------------------------------------------------

Interleaving info:
   1: P: table = ets:new(table, [public,named_table])
    in simple_delay.erl line 12
   2: P: true = ets:insert(table, {x,0})
    in simple_delay.erl line 23
   3: P: P.1 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   4: P: P.2 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   5: P: P.3 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   6: P: P.4 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   7: P: P.5 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   8: P: P.6 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   9: P: P.7 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  10: P: P.8 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  11: P: P.9 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  12: P: P.10 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  13: P.1: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  14: P.1: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  15: P.1: exits normally
  16: P.2: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  17: P.2: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  18: P.2: exits normally
  19: P.4: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  20: P.4: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  21: P.4: exits normally
  22: P.5: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  23: P.5: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  24: P.5: exits normally
  25: P.6: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  26: P.6: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  27: P.6: exits normally
  28: P.7: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  29: P.7: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  30: P.7: exits normally
  31: P.8: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  32: P.8: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  33: P.8: exits normally
  34: P.9: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  35: P.9: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  36: P.9: exits normally
  37: P.10: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  38: P.10: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  39: P.10: exits normally
  40: P.3: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  41: P.3: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  42: P.3: exits normally
################################################################################

Erroneous interleaving 16:
* Blocked at a 'receive' (when all other processes have exited):
    P in simple_delay.erl line 16
--------------------------------------------------------------------------------

Interleaving info:
   1: P: table = ets:new(table, [public,named_table])
    in simple_delay.erl line 12
   2: P: true = ets:insert(table, {x,0})
    in simple_delay.erl line 23
   3: P: P.1 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   4: P: P.2 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   5: P: P.3 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   6: P: P.4 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   7: P: P.5 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   8: P: P.6 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   9: P: P.7 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  10: P: P.8 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  11: P: P.9 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  12: P: P.10 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  13: P.1: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  14: P.1: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  15: P.1: exits normally
  16: P.2: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  17: P.3: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  18: P.3: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  19: P.3: exits normally
  20: P.4: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  21: P.4: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  22: P.4: exits normally
  23: P.5: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  24: P.5: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  25: P.5: exits normally
  26: P.6: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  27: P.6: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  28: P.6: exits normally
  29: P.7: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  30: P.7: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  31: P.7: exits normally
  32: P.8: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  33: P.8: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  34: P.8: exits normally
  35: P.9: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  36: P.9: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  37: P.9: exits normally
  38: P.10: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  39: P.10: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  40: P.10: exits normally
  41: P.2: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  42: P.2: exits normally
################################################################################

Erroneous interleaving 17:
* Blocked at a 'receive' (when all other processes have exited):
    P in simple_delay.erl line 16
--------------------------------------------------------------------------------

Interleaving info:
   1: P: table = ets:new(table, [public,named_table])
    in simple_delay.erl line 12
   2: P: true = ets:insert(table, {x,0})
    in simple_delay.erl line 23
   3: P: P.1 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   4: P: P.2 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   5: P: P.3 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   6: P: P.4 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   7: P: P.5 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   8: P: P.6 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   9: P: P.7 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  10: P: P.8 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  11: P: P.9 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  12: P: P.10 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  13: P.1: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  14: P.1: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  15: P.1: exits normally
  16: P.3: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  17: P.3: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  18: P.3: exits normally
  19: P.4: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  20: P.4: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  21: P.4: exits normally
  22: P.5: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  23: P.5: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  24: P.5: exits normally
  25: P.6: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  26: P.6: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  27: P.6: exits normally
  28: P.7: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  29: P.7: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  30: P.7: exits normally
  31: P.8: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  32: P.8: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  33: P.8: exits normally
  34: P.9: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  35: P.9: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  36: P.9: exits normally
  37: P.10: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  38: P.10: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  39: P.10: exits normally
  40: P.2: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  41: P.2: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  42: P.2: exits normally
################################################################################

Erroneous interleaving 18:
* Blocked at a 'receive' (when all other processes have exited):
    P in simple_delay.erl line 16
--------------------------------------------------------------------------------

Interleaving info:
   1: P: table = ets:new(table, [public,named_table])
    in simple_delay.erl line 12
   2: P: true = ets:insert(table, {x,0})
    in simple_delay.erl line 23
   3: P: P.1 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   4: P: P.2 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   5: P: P.3 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   6: P: P.4 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   7: P: P.5 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   8: P: P.6 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   9: P: P.7 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  10: P: P.8 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  11: P: P.9 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  12: P: P.10 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  13: P.1: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  14: P.2: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  15: P.2: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  16: P.2: exits normally
  17: P.3: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  18: P.3: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  19: P.3: exits normally
  20: P.4: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  21: P.4: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  22: P.4: exits normally
  23: P.5: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  24: P.5: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  25: P.5: exits normally
  26: P.6: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  27: P.6: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  28: P.6: exits normally
  29: P.7: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  30: P.7: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  31: P.7: exits normally
  32: P.8: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  33: P.8: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  34: P.8: exits normally
  35: P.9: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  36: P.9: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  37: P.9: exits normally
  38: P.10: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  39: P.10: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  40: P.10: exits normally
  41: P.1: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  42: P.1: exits normally
################################################################################

Erroneous interleaving 19:
* Blocked at a 'receive' (when all other processes have exited):
    P in simple_delay.erl line 16
--------------------------------------------------------------------------------

Interleaving info:
   1: P: table = ets:new(table, [public,named_table])
    in simple_delay.erl line 12
   2: P: true = ets:insert(table, {x,0})
    in simple_delay.erl line 23
   3: P: P.1 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   4: P: P.2 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   5: P: P.3 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   6: P: P.4 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   7: P: P.5 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   8: P: P.6 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
   9: P: P.7 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  10: P: P.8 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  11: P: P.9 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  12: P: P.10 = erlang:spawn(erlang, apply, [#Fun<simple_delay.'-test/0-fun-0-'.0>,[]])
    in erlang.erl line 2505
  13: P.2: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  14: P.2: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  15: P.2: exits normally
  16: P.3: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  17: P.3: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  18: P.3: exits normally
  19: P.4: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  20: P.4: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  21: P.4: exits normally
  22: P.5: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  23: P.5: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  24: P.5: exits normally
  25: P.6: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  26: P.6: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  27: P.6: exits normally
  28: P.7: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  29: P.7: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  30: P.7: exits normally
  31: P.8: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  32: P.8: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  33: P.8: exits normally
  34: P.9: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  35: P.9: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  36: P.9: exits normally
  37: P.10: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  38: P.10: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  39: P.10: exits normally
  40: P.1: true = ets:insert(table, {x,1})
    in simple_delay.erl line 23
  41: P.1: true = ets:insert(table, {x,2})
    in simple_delay.erl line 23
  42: P.1: exits normally
################################################################################

Warnings:
--------------------------------------------------------------------------------

Continuing after error (-k)
Some interleavings were not considered due to schedule bounding.

################################################################################

Tips:
--------------------------------------------------------------------------------

Each of the first 10 interleavings explored so far had some error. This can make later debugging difficult, as the generated report will include too much info. Consider refactoring your code, or using the appropriate options to filter out irrelevant errors.

################################################################################

Info:
--------------------------------------------------------------------------------

Instrumented simple_delay
Instrumented io_lib
Instrumented lists
Instrumented erlang
You can see pairs of racing instructions (in the report and --graph) with '--show_races true'

################################################################################

Done! (Exit status: completed)
  Summary: 19 errors, 19/19 interleavings explored (the scheduling bound was reached)
