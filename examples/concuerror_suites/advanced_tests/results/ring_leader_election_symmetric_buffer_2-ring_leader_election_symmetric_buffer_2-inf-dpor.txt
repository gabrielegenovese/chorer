################################################################################
Concuerror started with options:
  [{'after-timeout',infinite},
   {assume_racing,false},
   {files,
       ["/home/stavros/git/Concuerror/tests/suites/advanced_tests/src/ring_leader_election_symmetric_buffer_2.erl"]},
   {normal_exit,[normal]},
   {symbolic,true},
   {target,
       {ring_leader_election_symmetric_buffer_2,
           ring_leader_election_symmetric_buffer_2,[]}},
   {verbose,0},
   {wait,2000}]
################################################################################
Erroneous interleaving 1:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: Message ({get,p2}) from P.4 reaches P.2
  13: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  14: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  15: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  16: Message ({put,3}) from P.4.1 reaches P.1
  17: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  18: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  19: Message (3) from P.1 reaches P
  20: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  21: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  22: Message ({put,3}) from P reaches P.2
  23: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  24: Message ({get,p1}) from P reaches P.1
  25: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  26: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  27: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  28: Message (3) from P.2 reaches P.4
  29: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  30: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  31: Message ({put,3}) from P.4 reaches P.3
  32: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  33: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  34: Message ({get,p2}) from P.4 reaches P.2
  35: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  36: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  37: Message ({get,p3}) from P.4.1 reaches P.3
  38: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  39: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  40: Message (3) from P.3 reaches P.4.1
  41: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  42: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  43: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  44: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  45: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  46: Message ({leader,3}) from P.1 reaches P
  47: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  48: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: P: exits normally
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  53: Message ({leader,3}) from P.2 reaches P.4
  54: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  55: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  56: Message ({put,{leader,3}}) from P.4 reaches P.3
  57: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  58: P.4: exits normally
  59: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  60: Message ({get,p3}) from P.4.1 reaches P.3
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 2:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: Message ({get,p2}) from P.4 reaches P.2
  13: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  14: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  15: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  16: Message ({put,3}) from P.4.1 reaches P.1
  17: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  18: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  19: Message (3) from P.1 reaches P
  20: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  21: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  22: Message ({put,3}) from P reaches P.2
  23: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  24: Message ({get,p1}) from P reaches P.1
  25: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  26: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  27: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  28: Message (3) from P.2 reaches P.4
  29: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  30: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  31: Message ({put,3}) from P.4 reaches P.3
  32: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  33: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  34: Message ({get,p2}) from P.4 reaches P.2
  35: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  36: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  37: Message ({get,p3}) from P.4.1 reaches P.3
  38: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  39: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  40: Message (3) from P.3 reaches P.4.1
  41: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  42: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  43: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  44: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  45: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  46: Message ({leader,3}) from P.1 reaches P
  47: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  48: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: P: exits normally
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  53: Message ({leader,3}) from P.2 reaches P.4
  54: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  55: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  56: P.4: exits normally
  57: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  58: Message ({get,p3}) from P.4.1 reaches P.3
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 3:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: Message ({get,p2}) from P.4 reaches P.2
  13: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  14: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  15: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  16: Message ({put,3}) from P.4.1 reaches P.1
  17: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  18: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  19: Message (3) from P.1 reaches P
  20: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  21: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  22: Message ({put,3}) from P reaches P.2
  23: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  24: Message ({get,p1}) from P reaches P.1
  25: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  26: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  27: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  28: Message (3) from P.2 reaches P.4
  29: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  30: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  31: Message ({put,3}) from P.4 reaches P.3
  32: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  33: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  34: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  35: Message ({get,p3}) from P.4.1 reaches P.3
  36: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  37: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  38: Message (3) from P.3 reaches P.4.1
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  42: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  43: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  44: Message ({leader,3}) from P.1 reaches P
  45: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  46: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  47: P: exits normally
  48: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: Message ({get,p2}) from P.4 reaches P.2
  51: Message ({get,p3}) from P.4.1 reaches P.3
  52: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  53: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  54: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  55: Message ({leader,3}) from P.2 reaches P.4
  56: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  57: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  58: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  62: Message ({leader,3}) from P.3 reaches P.4.1
  63: P.4: exits normally
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 4:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: Message ({get,p2}) from P.4 reaches P.2
  13: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  14: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  15: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  16: Message ({put,3}) from P.4.1 reaches P.1
  17: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  18: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  19: Message (3) from P.1 reaches P
  20: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  21: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  22: Message ({put,3}) from P reaches P.2
  23: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  24: Message ({get,p1}) from P reaches P.1
  25: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  26: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  27: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  28: Message (3) from P.2 reaches P.4
  29: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  30: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  31: Message ({put,3}) from P.4 reaches P.3
  32: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  33: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  34: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  35: Message ({get,p3}) from P.4.1 reaches P.3
  36: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  37: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  38: Message (3) from P.3 reaches P.4.1
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  42: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  43: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  44: Message ({leader,3}) from P.1 reaches P
  45: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  46: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  47: P: exits normally
  48: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: Message ({get,p2}) from P.4 reaches P.2
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  53: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  54: Message ({leader,3}) from P.2 reaches P.4
  55: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  56: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  57: P.4: exits normally
  58: Message ({put,{leader,3}}) from P.4 reaches P.3
  59: Message ({get,p3}) from P.4.1 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 5:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: Message ({get,p2}) from P.4 reaches P.2
  13: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  14: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  15: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  16: Message ({put,3}) from P.4.1 reaches P.1
  17: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  18: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  19: Message (3) from P.1 reaches P
  20: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  21: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  22: Message ({put,3}) from P reaches P.2
  23: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  24: Message ({get,p1}) from P reaches P.1
  25: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  26: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  27: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  28: Message (3) from P.2 reaches P.4
  29: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  30: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  31: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  32: Message ({get,p2}) from P.4 reaches P.2
  33: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  34: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  35: Message ({get,p3}) from P.4.1 reaches P.3
  36: Message ({put,3}) from P.4 reaches P.3
  37: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  38: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  39: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  40: Message (3) from P.3 reaches P.4.1
  41: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  42: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  43: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  44: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  45: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  46: Message ({leader,3}) from P.1 reaches P
  47: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  48: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: P: exits normally
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  53: Message ({leader,3}) from P.2 reaches P.4
  54: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  55: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  56: Message ({put,{leader,3}}) from P.4 reaches P.3
  57: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  58: P.4: exits normally
  59: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  60: Message ({get,p3}) from P.4.1 reaches P.3
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 6:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: Message ({get,p2}) from P.4 reaches P.2
  13: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  14: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  15: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  16: Message ({put,3}) from P.4.1 reaches P.1
  17: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  18: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  19: Message (3) from P.1 reaches P
  20: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  21: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  22: Message ({put,3}) from P reaches P.2
  23: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  24: Message ({get,p1}) from P reaches P.1
  25: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  26: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  27: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  28: Message (3) from P.2 reaches P.4
  29: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  30: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  31: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  32: Message ({get,p2}) from P.4 reaches P.2
  33: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  34: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  35: Message ({get,p3}) from P.4.1 reaches P.3
  36: Message ({put,3}) from P.4 reaches P.3
  37: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  38: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  39: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  40: Message (3) from P.3 reaches P.4.1
  41: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  42: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  43: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  44: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  45: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  46: Message ({leader,3}) from P.1 reaches P
  47: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  48: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: P: exits normally
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  53: Message ({leader,3}) from P.2 reaches P.4
  54: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  55: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  56: P.4: exits normally
  57: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  58: Message ({get,p3}) from P.4.1 reaches P.3
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 7:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: Message ({get,p2}) from P.4 reaches P.2
  13: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  14: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  15: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  16: Message ({put,3}) from P.4.1 reaches P.1
  17: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  18: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  19: Message (3) from P.1 reaches P
  20: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  21: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  22: Message ({put,3}) from P reaches P.2
  23: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  24: Message ({get,p1}) from P reaches P.1
  25: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  26: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  27: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  28: Message (3) from P.2 reaches P.4
  29: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  30: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  31: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  32: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  33: Message ({get,p3}) from P.4.1 reaches P.3
  34: Message ({put,3}) from P.4 reaches P.3
  35: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  36: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  37: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  38: Message (3) from P.3 reaches P.4.1
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  42: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  43: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  44: Message ({leader,3}) from P.1 reaches P
  45: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  46: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  47: P: exits normally
  48: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: Message ({get,p2}) from P.4 reaches P.2
  51: Message ({get,p3}) from P.4.1 reaches P.3
  52: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  53: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  54: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  55: Message ({leader,3}) from P.2 reaches P.4
  56: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  57: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  58: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  62: Message ({leader,3}) from P.3 reaches P.4.1
  63: P.4: exits normally
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 8:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: Message ({get,p2}) from P.4 reaches P.2
  13: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  14: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  15: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  16: Message ({put,3}) from P.4.1 reaches P.1
  17: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  18: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  19: Message (3) from P.1 reaches P
  20: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  21: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  22: Message ({put,3}) from P reaches P.2
  23: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  24: Message ({get,p1}) from P reaches P.1
  25: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  26: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  27: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  28: Message (3) from P.2 reaches P.4
  29: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  30: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  31: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  32: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  33: Message ({get,p3}) from P.4.1 reaches P.3
  34: Message ({put,3}) from P.4 reaches P.3
  35: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  36: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  37: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  38: Message (3) from P.3 reaches P.4.1
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  42: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  43: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  44: Message ({leader,3}) from P.1 reaches P
  45: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  46: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  47: P: exits normally
  48: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: Message ({get,p2}) from P.4 reaches P.2
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  53: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  54: Message ({leader,3}) from P.2 reaches P.4
  55: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  56: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  57: P.4: exits normally
  58: Message ({put,{leader,3}}) from P.4 reaches P.3
  59: Message ({get,p3}) from P.4.1 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 9:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: Message ({get,p2}) from P.4 reaches P.2
  13: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  14: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  15: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  16: Message ({put,3}) from P.4.1 reaches P.1
  17: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  18: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  19: Message (3) from P.1 reaches P
  20: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  21: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  22: Message ({put,3}) from P reaches P.2
  23: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  24: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  25: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  26: Message (3) from P.2 reaches P.4
  27: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  28: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  29: Message ({put,3}) from P.4 reaches P.3
  30: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  31: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  32: Message ({get,p2}) from P.4 reaches P.2
  33: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  34: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  35: Message ({get,p3}) from P.4.1 reaches P.3
  36: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  37: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  38: Message (3) from P.3 reaches P.4.1
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  42: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  43: Message ({get,p1}) from P reaches P.1
  44: Message ({get,p3}) from P.4.1 reaches P.3
  45: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  46: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  47: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  48: Message ({leader,3}) from P.1 reaches P
  49: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  50: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  51: Message ({put,{leader,3}}) from P reaches P.2
  52: P: exits normally
  53: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  54: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  55: Message ({leader,3}) from P.2 reaches P.4
  56: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  57: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  58: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  62: Message ({leader,3}) from P.3 reaches P.4.1
  63: P.4: exits normally
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 10:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: Message ({get,p2}) from P.4 reaches P.2
  13: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  14: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  15: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  16: Message ({put,3}) from P.4.1 reaches P.1
  17: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  18: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  19: Message (3) from P.1 reaches P
  20: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  21: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  22: Message ({put,3}) from P reaches P.2
  23: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  24: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  25: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  26: Message (3) from P.2 reaches P.4
  27: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  28: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  29: Message ({put,3}) from P.4 reaches P.3
  30: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  31: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  32: Message ({get,p2}) from P.4 reaches P.2
  33: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  34: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  35: Message ({get,p3}) from P.4.1 reaches P.3
  36: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  37: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  38: Message (3) from P.3 reaches P.4.1
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  42: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  43: Message ({get,p1}) from P reaches P.1
  44: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  45: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  46: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  47: Message ({leader,3}) from P.1 reaches P
  48: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  49: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  50: Message ({put,{leader,3}}) from P reaches P.2
  51: P: exits normally
  52: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  53: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  54: Message ({leader,3}) from P.2 reaches P.4
  55: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  56: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  57: P.4: exits normally
  58: Message ({put,{leader,3}}) from P.4 reaches P.3
  59: Message ({get,p3}) from P.4.1 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 11:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: Message ({get,p2}) from P.4 reaches P.2
  13: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  14: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  15: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  16: Message ({put,3}) from P.4.1 reaches P.1
  17: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  18: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  19: Message (3) from P.1 reaches P
  20: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  21: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  22: Message ({put,3}) from P reaches P.2
  23: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  24: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  25: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  26: Message (3) from P.2 reaches P.4
  27: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  28: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  29: Message ({put,3}) from P.4 reaches P.3
  30: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  31: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  32: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  33: Message ({get,p3}) from P.4.1 reaches P.3
  34: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  35: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  36: Message (3) from P.3 reaches P.4.1
  37: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  38: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  39: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  40: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  41: Message ({get,p1}) from P reaches P.1
  42: Message ({get,p3}) from P.4.1 reaches P.3
  43: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  44: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  45: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  46: Message ({leader,3}) from P.1 reaches P
  47: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  48: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  49: P: exits normally
  50: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  51: Message ({put,{leader,3}}) from P reaches P.2
  52: Message ({get,p2}) from P.4 reaches P.2
  53: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  54: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  55: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  56: Message ({leader,3}) from P.2 reaches P.4
  57: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  58: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  62: Message ({leader,3}) from P.3 reaches P.4.1
  63: P.4: exits normally
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 12:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: Message ({get,p2}) from P.4 reaches P.2
  13: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  14: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  15: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  16: Message ({put,3}) from P.4.1 reaches P.1
  17: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  18: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  19: Message (3) from P.1 reaches P
  20: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  21: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  22: Message ({put,3}) from P reaches P.2
  23: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  24: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  25: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  26: Message (3) from P.2 reaches P.4
  27: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  28: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  29: Message ({put,3}) from P.4 reaches P.3
  30: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  31: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  32: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  33: Message ({get,p3}) from P.4.1 reaches P.3
  34: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  35: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  36: Message (3) from P.3 reaches P.4.1
  37: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  38: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  39: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  40: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  41: Message ({get,p1}) from P reaches P.1
  42: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  43: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  44: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  45: Message ({leader,3}) from P.1 reaches P
  46: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  47: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  48: P: exits normally
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: Message ({get,p2}) from P.4 reaches P.2
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  53: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  54: Message ({leader,3}) from P.2 reaches P.4
  55: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  56: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  57: P.4: exits normally
  58: Message ({put,{leader,3}}) from P.4 reaches P.3
  59: Message ({get,p3}) from P.4.1 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 13:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: Message ({get,p2}) from P.4 reaches P.2
  13: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  14: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  15: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  16: Message ({put,3}) from P.4.1 reaches P.1
  17: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  18: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  19: Message (3) from P.1 reaches P
  20: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  21: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  22: Message ({put,3}) from P reaches P.2
  23: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  24: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  25: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  26: Message (3) from P.2 reaches P.4
  27: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  28: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  29: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  30: Message ({get,p2}) from P.4 reaches P.2
  31: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  32: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  33: Message ({get,p3}) from P.4.1 reaches P.3
  34: Message ({put,3}) from P.4 reaches P.3
  35: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  36: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  37: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  38: Message (3) from P.3 reaches P.4.1
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  42: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  43: Message ({get,p1}) from P reaches P.1
  44: Message ({get,p3}) from P.4.1 reaches P.3
  45: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  46: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  47: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  48: Message ({leader,3}) from P.1 reaches P
  49: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  50: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  51: Message ({put,{leader,3}}) from P reaches P.2
  52: P: exits normally
  53: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  54: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  55: Message ({leader,3}) from P.2 reaches P.4
  56: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  57: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  58: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  62: Message ({leader,3}) from P.3 reaches P.4.1
  63: P.4: exits normally
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 14:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: Message ({get,p2}) from P.4 reaches P.2
  13: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  14: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  15: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  16: Message ({put,3}) from P.4.1 reaches P.1
  17: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  18: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  19: Message (3) from P.1 reaches P
  20: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  21: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  22: Message ({put,3}) from P reaches P.2
  23: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  24: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  25: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  26: Message (3) from P.2 reaches P.4
  27: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  28: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  29: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  30: Message ({get,p2}) from P.4 reaches P.2
  31: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  32: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  33: Message ({get,p3}) from P.4.1 reaches P.3
  34: Message ({put,3}) from P.4 reaches P.3
  35: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  36: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  37: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  38: Message (3) from P.3 reaches P.4.1
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  42: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  43: Message ({get,p1}) from P reaches P.1
  44: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  45: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  46: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  47: Message ({leader,3}) from P.1 reaches P
  48: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  49: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  50: Message ({put,{leader,3}}) from P reaches P.2
  51: P: exits normally
  52: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  53: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  54: Message ({leader,3}) from P.2 reaches P.4
  55: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  56: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  57: P.4: exits normally
  58: Message ({put,{leader,3}}) from P.4 reaches P.3
  59: Message ({get,p3}) from P.4.1 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 15:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: Message ({get,p2}) from P.4 reaches P.2
  13: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  14: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  15: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  16: Message ({put,3}) from P.4.1 reaches P.1
  17: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  18: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  19: Message (3) from P.1 reaches P
  20: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  21: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  22: Message ({put,3}) from P reaches P.2
  23: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  24: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  25: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  26: Message (3) from P.2 reaches P.4
  27: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  28: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  29: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  30: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  31: Message ({get,p3}) from P.4.1 reaches P.3
  32: Message ({put,3}) from P.4 reaches P.3
  33: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  34: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  35: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  36: Message (3) from P.3 reaches P.4.1
  37: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  38: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  39: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  40: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  41: Message ({get,p1}) from P reaches P.1
  42: Message ({get,p3}) from P.4.1 reaches P.3
  43: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  44: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  45: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  46: Message ({leader,3}) from P.1 reaches P
  47: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  48: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  49: P: exits normally
  50: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  51: Message ({put,{leader,3}}) from P reaches P.2
  52: Message ({get,p2}) from P.4 reaches P.2
  53: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  54: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  55: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  56: Message ({leader,3}) from P.2 reaches P.4
  57: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  58: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  62: Message ({leader,3}) from P.3 reaches P.4.1
  63: P.4: exits normally
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 16:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: Message ({get,p2}) from P.4 reaches P.2
  13: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  14: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  15: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  16: Message ({put,3}) from P.4.1 reaches P.1
  17: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  18: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  19: Message (3) from P.1 reaches P
  20: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  21: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  22: Message ({put,3}) from P reaches P.2
  23: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  24: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  25: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  26: Message (3) from P.2 reaches P.4
  27: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  28: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  29: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  30: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  31: Message ({get,p3}) from P.4.1 reaches P.3
  32: Message ({put,3}) from P.4 reaches P.3
  33: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  34: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  35: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  36: Message (3) from P.3 reaches P.4.1
  37: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  38: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  39: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  40: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  41: Message ({get,p1}) from P reaches P.1
  42: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  43: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  44: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  45: Message ({leader,3}) from P.1 reaches P
  46: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  47: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  48: P: exits normally
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: Message ({get,p2}) from P.4 reaches P.2
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  53: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  54: Message ({leader,3}) from P.2 reaches P.4
  55: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  56: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  57: P.4: exits normally
  58: Message ({put,{leader,3}}) from P.4 reaches P.3
  59: Message ({get,p3}) from P.4.1 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 17:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: Message ({put,3}) from P.4.1 reaches P.1
  15: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  16: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  17: Message (3) from P.1 reaches P
  18: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  19: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  20: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  21: Message ({get,p1}) from P reaches P.1
  22: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  23: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  24: Message ({put,3}) from P reaches P.2
  25: Message ({get,p2}) from P.4 reaches P.2
  26: Message ({get,p3}) from P.4.1 reaches P.3
  27: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  28: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  29: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  30: Message (3) from P.2 reaches P.4
  31: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  32: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  33: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  34: Message ({put,3}) from P.4 reaches P.3
  35: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  36: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  37: Message (3) from P.3 reaches P.4.1
  38: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  39: Message ({get,p2}) from P.4 reaches P.2
  40: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  41: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  42: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  43: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  44: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  45: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  46: Message ({leader,3}) from P.1 reaches P
  47: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  48: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: P: exits normally
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  53: Message ({leader,3}) from P.2 reaches P.4
  54: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  55: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  56: Message ({put,{leader,3}}) from P.4 reaches P.3
  57: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  58: P.4: exits normally
  59: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  60: Message ({get,p3}) from P.4.1 reaches P.3
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 18:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: Message ({put,3}) from P.4.1 reaches P.1
  15: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  16: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  17: Message (3) from P.1 reaches P
  18: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  19: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  20: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  21: Message ({get,p1}) from P reaches P.1
  22: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  23: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  24: Message ({put,3}) from P reaches P.2
  25: Message ({get,p2}) from P.4 reaches P.2
  26: Message ({get,p3}) from P.4.1 reaches P.3
  27: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  28: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  29: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  30: Message (3) from P.2 reaches P.4
  31: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  32: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  33: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  34: Message ({put,3}) from P.4 reaches P.3
  35: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  36: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  37: Message (3) from P.3 reaches P.4.1
  38: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  39: Message ({get,p2}) from P.4 reaches P.2
  40: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  41: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  42: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  43: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  44: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  45: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  46: Message ({leader,3}) from P.1 reaches P
  47: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  48: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: P: exits normally
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  53: Message ({leader,3}) from P.2 reaches P.4
  54: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  55: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  56: P.4: exits normally
  57: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  58: Message ({get,p3}) from P.4.1 reaches P.3
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 19:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: Message ({put,3}) from P.4.1 reaches P.1
  15: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  16: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  17: Message (3) from P.1 reaches P
  18: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  19: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  20: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  21: Message ({get,p1}) from P reaches P.1
  22: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  23: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  24: Message ({put,3}) from P reaches P.2
  25: Message ({get,p2}) from P.4 reaches P.2
  26: Message ({get,p3}) from P.4.1 reaches P.3
  27: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  28: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  29: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  30: Message (3) from P.2 reaches P.4
  31: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  32: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  33: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  34: Message ({put,3}) from P.4 reaches P.3
  35: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  36: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  37: Message (3) from P.3 reaches P.4.1
  38: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  42: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  43: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  44: Message ({leader,3}) from P.1 reaches P
  45: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  46: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  47: P: exits normally
  48: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: Message ({get,p2}) from P.4 reaches P.2
  51: Message ({get,p3}) from P.4.1 reaches P.3
  52: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  53: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  54: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  55: Message ({leader,3}) from P.2 reaches P.4
  56: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  57: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  58: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  62: Message ({leader,3}) from P.3 reaches P.4.1
  63: P.4: exits normally
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 20:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: Message ({put,3}) from P.4.1 reaches P.1
  15: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  16: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  17: Message (3) from P.1 reaches P
  18: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  19: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  20: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  21: Message ({get,p1}) from P reaches P.1
  22: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  23: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  24: Message ({put,3}) from P reaches P.2
  25: Message ({get,p2}) from P.4 reaches P.2
  26: Message ({get,p3}) from P.4.1 reaches P.3
  27: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  28: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  29: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  30: Message (3) from P.2 reaches P.4
  31: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  32: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  33: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  34: Message ({put,3}) from P.4 reaches P.3
  35: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  36: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  37: Message (3) from P.3 reaches P.4.1
  38: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  42: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  43: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  44: Message ({leader,3}) from P.1 reaches P
  45: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  46: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  47: P: exits normally
  48: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: Message ({get,p2}) from P.4 reaches P.2
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  53: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  54: Message ({leader,3}) from P.2 reaches P.4
  55: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  56: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  57: P.4: exits normally
  58: Message ({put,{leader,3}}) from P.4 reaches P.3
  59: Message ({get,p3}) from P.4.1 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 21:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: Message ({put,3}) from P.4.1 reaches P.1
  15: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  16: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  17: Message (3) from P.1 reaches P
  18: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  19: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  20: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  21: Message ({get,p1}) from P reaches P.1
  22: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  23: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  24: Message ({put,3}) from P reaches P.2
  25: Message ({get,p2}) from P.4 reaches P.2
  26: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  27: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  28: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  29: Message (3) from P.2 reaches P.4
  30: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  31: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  32: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  33: Message ({get,p2}) from P.4 reaches P.2
  34: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  35: Message ({put,3}) from P.4 reaches P.3
  36: Message ({get,p3}) from P.4.1 reaches P.3
  37: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  38: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  39: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  40: Message (3) from P.3 reaches P.4.1
  41: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  42: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  43: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  44: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  45: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  46: Message ({leader,3}) from P.1 reaches P
  47: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  48: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: P: exits normally
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  53: Message ({leader,3}) from P.2 reaches P.4
  54: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  55: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  56: Message ({put,{leader,3}}) from P.4 reaches P.3
  57: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  58: P.4: exits normally
  59: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  60: Message ({get,p3}) from P.4.1 reaches P.3
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 22:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: Message ({put,3}) from P.4.1 reaches P.1
  15: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  16: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  17: Message (3) from P.1 reaches P
  18: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  19: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  20: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  21: Message ({get,p1}) from P reaches P.1
  22: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  23: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  24: Message ({put,3}) from P reaches P.2
  25: Message ({get,p2}) from P.4 reaches P.2
  26: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  27: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  28: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  29: Message (3) from P.2 reaches P.4
  30: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  31: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  32: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  33: Message ({get,p2}) from P.4 reaches P.2
  34: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  35: Message ({put,3}) from P.4 reaches P.3
  36: Message ({get,p3}) from P.4.1 reaches P.3
  37: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  38: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  39: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  40: Message (3) from P.3 reaches P.4.1
  41: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  42: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  43: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  44: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  45: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  46: Message ({leader,3}) from P.1 reaches P
  47: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  48: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: P: exits normally
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  53: Message ({leader,3}) from P.2 reaches P.4
  54: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  55: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  56: P.4: exits normally
  57: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  58: Message ({get,p3}) from P.4.1 reaches P.3
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 23:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: Message ({put,3}) from P.4.1 reaches P.1
  15: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  16: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  17: Message (3) from P.1 reaches P
  18: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  19: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  20: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  21: Message ({get,p1}) from P reaches P.1
  22: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  23: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  24: Message ({put,3}) from P reaches P.2
  25: Message ({get,p2}) from P.4 reaches P.2
  26: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  27: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  28: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  29: Message (3) from P.2 reaches P.4
  30: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  31: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  32: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  33: Message ({put,3}) from P.4 reaches P.3
  34: Message ({get,p3}) from P.4.1 reaches P.3
  35: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  36: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  37: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  38: Message (3) from P.3 reaches P.4.1
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  42: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  43: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  44: Message ({leader,3}) from P.1 reaches P
  45: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  46: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  47: P: exits normally
  48: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: Message ({get,p2}) from P.4 reaches P.2
  51: Message ({get,p3}) from P.4.1 reaches P.3
  52: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  53: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  54: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  55: Message ({leader,3}) from P.2 reaches P.4
  56: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  57: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  58: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  62: Message ({leader,3}) from P.3 reaches P.4.1
  63: P.4: exits normally
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 24:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: Message ({put,3}) from P.4.1 reaches P.1
  15: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  16: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  17: Message (3) from P.1 reaches P
  18: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  19: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  20: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  21: Message ({get,p1}) from P reaches P.1
  22: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  23: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  24: Message ({put,3}) from P reaches P.2
  25: Message ({get,p2}) from P.4 reaches P.2
  26: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  27: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  28: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  29: Message (3) from P.2 reaches P.4
  30: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  31: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  32: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  33: Message ({put,3}) from P.4 reaches P.3
  34: Message ({get,p3}) from P.4.1 reaches P.3
  35: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  36: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  37: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  38: Message (3) from P.3 reaches P.4.1
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  42: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  43: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  44: Message ({leader,3}) from P.1 reaches P
  45: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  46: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  47: P: exits normally
  48: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: Message ({get,p2}) from P.4 reaches P.2
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  53: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  54: Message ({leader,3}) from P.2 reaches P.4
  55: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  56: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  57: P.4: exits normally
  58: Message ({put,{leader,3}}) from P.4 reaches P.3
  59: Message ({get,p3}) from P.4.1 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 25:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: Message ({put,3}) from P.4.1 reaches P.1
  15: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  16: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  17: Message (3) from P.1 reaches P
  18: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  19: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  20: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  21: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  22: Message ({put,3}) from P reaches P.2
  23: Message ({get,p2}) from P.4 reaches P.2
  24: Message ({get,p3}) from P.4.1 reaches P.3
  25: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  26: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  27: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  28: Message (3) from P.2 reaches P.4
  29: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  30: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  31: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  32: Message ({put,3}) from P.4 reaches P.3
  33: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  34: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  35: Message (3) from P.3 reaches P.4.1
  36: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  37: Message ({get,p2}) from P.4 reaches P.2
  38: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  42: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  43: Message ({get,p1}) from P reaches P.1
  44: Message ({get,p3}) from P.4.1 reaches P.3
  45: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  46: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  47: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  48: Message ({leader,3}) from P.1 reaches P
  49: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  50: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  51: Message ({put,{leader,3}}) from P reaches P.2
  52: P: exits normally
  53: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  54: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  55: Message ({leader,3}) from P.2 reaches P.4
  56: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  57: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  58: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  62: Message ({leader,3}) from P.3 reaches P.4.1
  63: P.4: exits normally
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 26:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: Message ({put,3}) from P.4.1 reaches P.1
  15: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  16: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  17: Message (3) from P.1 reaches P
  18: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  19: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  20: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  21: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  22: Message ({put,3}) from P reaches P.2
  23: Message ({get,p2}) from P.4 reaches P.2
  24: Message ({get,p3}) from P.4.1 reaches P.3
  25: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  26: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  27: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  28: Message (3) from P.2 reaches P.4
  29: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  30: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  31: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  32: Message ({put,3}) from P.4 reaches P.3
  33: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  34: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  35: Message (3) from P.3 reaches P.4.1
  36: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  37: Message ({get,p2}) from P.4 reaches P.2
  38: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  42: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  43: Message ({get,p1}) from P reaches P.1
  44: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  45: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  46: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  47: Message ({leader,3}) from P.1 reaches P
  48: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  49: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  50: Message ({put,{leader,3}}) from P reaches P.2
  51: P: exits normally
  52: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  53: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  54: Message ({leader,3}) from P.2 reaches P.4
  55: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  56: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  57: P.4: exits normally
  58: Message ({put,{leader,3}}) from P.4 reaches P.3
  59: Message ({get,p3}) from P.4.1 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 27:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: Message ({put,3}) from P.4.1 reaches P.1
  15: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  16: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  17: Message (3) from P.1 reaches P
  18: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  19: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  20: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  21: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  22: Message ({put,3}) from P reaches P.2
  23: Message ({get,p2}) from P.4 reaches P.2
  24: Message ({get,p3}) from P.4.1 reaches P.3
  25: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  26: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  27: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  28: Message (3) from P.2 reaches P.4
  29: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  30: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  31: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  32: Message ({put,3}) from P.4 reaches P.3
  33: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  34: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  35: Message (3) from P.3 reaches P.4.1
  36: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  37: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  38: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  39: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  40: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  41: Message ({get,p1}) from P reaches P.1
  42: Message ({get,p3}) from P.4.1 reaches P.3
  43: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  44: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  45: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  46: Message ({leader,3}) from P.1 reaches P
  47: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  48: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  49: P: exits normally
  50: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  51: Message ({put,{leader,3}}) from P reaches P.2
  52: Message ({get,p2}) from P.4 reaches P.2
  53: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  54: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  55: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  56: Message ({leader,3}) from P.2 reaches P.4
  57: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  58: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  62: Message ({leader,3}) from P.3 reaches P.4.1
  63: P.4: exits normally
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 28:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: Message ({put,3}) from P.4.1 reaches P.1
  15: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  16: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  17: Message (3) from P.1 reaches P
  18: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  19: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  20: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  21: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  22: Message ({put,3}) from P reaches P.2
  23: Message ({get,p2}) from P.4 reaches P.2
  24: Message ({get,p3}) from P.4.1 reaches P.3
  25: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  26: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  27: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  28: Message (3) from P.2 reaches P.4
  29: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  30: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  31: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  32: Message ({put,3}) from P.4 reaches P.3
  33: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  34: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  35: Message (3) from P.3 reaches P.4.1
  36: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  37: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  38: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  39: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  40: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  41: Message ({get,p1}) from P reaches P.1
  42: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  43: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  44: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  45: Message ({leader,3}) from P.1 reaches P
  46: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  47: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  48: P: exits normally
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: Message ({get,p2}) from P.4 reaches P.2
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  53: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  54: Message ({leader,3}) from P.2 reaches P.4
  55: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  56: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  57: P.4: exits normally
  58: Message ({put,{leader,3}}) from P.4 reaches P.3
  59: Message ({get,p3}) from P.4.1 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 29:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: Message ({put,3}) from P.4.1 reaches P.1
  15: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  16: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  17: Message (3) from P.1 reaches P
  18: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  19: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  20: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  21: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  22: Message ({put,3}) from P reaches P.2
  23: Message ({get,p2}) from P.4 reaches P.2
  24: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  25: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  26: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  27: Message (3) from P.2 reaches P.4
  28: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  29: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  30: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  31: Message ({get,p2}) from P.4 reaches P.2
  32: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  33: Message ({put,3}) from P.4 reaches P.3
  34: Message ({get,p3}) from P.4.1 reaches P.3
  35: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  36: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  37: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  38: Message (3) from P.3 reaches P.4.1
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  42: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  43: Message ({get,p1}) from P reaches P.1
  44: Message ({get,p3}) from P.4.1 reaches P.3
  45: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  46: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  47: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  48: Message ({leader,3}) from P.1 reaches P
  49: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  50: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  51: Message ({put,{leader,3}}) from P reaches P.2
  52: P: exits normally
  53: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  54: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  55: Message ({leader,3}) from P.2 reaches P.4
  56: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  57: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  58: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  62: Message ({leader,3}) from P.3 reaches P.4.1
  63: P.4: exits normally
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 30:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: Message ({put,3}) from P.4.1 reaches P.1
  15: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  16: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  17: Message (3) from P.1 reaches P
  18: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  19: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  20: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  21: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  22: Message ({put,3}) from P reaches P.2
  23: Message ({get,p2}) from P.4 reaches P.2
  24: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  25: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  26: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  27: Message (3) from P.2 reaches P.4
  28: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  29: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  30: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  31: Message ({get,p2}) from P.4 reaches P.2
  32: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  33: Message ({put,3}) from P.4 reaches P.3
  34: Message ({get,p3}) from P.4.1 reaches P.3
  35: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  36: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  37: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  38: Message (3) from P.3 reaches P.4.1
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  42: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  43: Message ({get,p1}) from P reaches P.1
  44: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  45: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  46: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  47: Message ({leader,3}) from P.1 reaches P
  48: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  49: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  50: Message ({put,{leader,3}}) from P reaches P.2
  51: P: exits normally
  52: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  53: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  54: Message ({leader,3}) from P.2 reaches P.4
  55: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  56: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  57: P.4: exits normally
  58: Message ({put,{leader,3}}) from P.4 reaches P.3
  59: Message ({get,p3}) from P.4.1 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 31:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: Message ({put,3}) from P.4.1 reaches P.1
  15: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  16: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  17: Message (3) from P.1 reaches P
  18: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  19: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  20: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  21: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  22: Message ({put,3}) from P reaches P.2
  23: Message ({get,p2}) from P.4 reaches P.2
  24: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  25: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  26: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  27: Message (3) from P.2 reaches P.4
  28: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  29: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  30: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  31: Message ({put,3}) from P.4 reaches P.3
  32: Message ({get,p3}) from P.4.1 reaches P.3
  33: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  34: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  35: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  36: Message (3) from P.3 reaches P.4.1
  37: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  38: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  39: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  40: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  41: Message ({get,p1}) from P reaches P.1
  42: Message ({get,p3}) from P.4.1 reaches P.3
  43: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  44: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  45: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  46: Message ({leader,3}) from P.1 reaches P
  47: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  48: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  49: P: exits normally
  50: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  51: Message ({put,{leader,3}}) from P reaches P.2
  52: Message ({get,p2}) from P.4 reaches P.2
  53: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  54: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  55: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  56: Message ({leader,3}) from P.2 reaches P.4
  57: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  58: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  62: Message ({leader,3}) from P.3 reaches P.4.1
  63: P.4: exits normally
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 32:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: Message ({get,p1}) from P reaches P.1
   8: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
   9: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
  10: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: Message ({put,3}) from P.4.1 reaches P.1
  15: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  16: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  17: Message (3) from P.1 reaches P
  18: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  19: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  20: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  21: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  22: Message ({put,3}) from P reaches P.2
  23: Message ({get,p2}) from P.4 reaches P.2
  24: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  25: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  26: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  27: Message (3) from P.2 reaches P.4
  28: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  29: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  30: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  31: Message ({put,3}) from P.4 reaches P.3
  32: Message ({get,p3}) from P.4.1 reaches P.3
  33: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  34: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  35: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  36: Message (3) from P.3 reaches P.4.1
  37: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  38: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  39: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  40: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  41: Message ({get,p1}) from P reaches P.1
  42: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  43: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  44: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  45: Message ({leader,3}) from P.1 reaches P
  46: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  47: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  48: P: exits normally
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: Message ({get,p2}) from P.4 reaches P.2
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  53: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  54: Message ({leader,3}) from P.2 reaches P.4
  55: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  56: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  57: P.4: exits normally
  58: Message ({put,{leader,3}}) from P.4 reaches P.3
  59: Message ({get,p3}) from P.4.1 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 33:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: Message ({get,p2}) from P.4 reaches P.2
  11: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  15: Message ({put,3}) from P.4.1 reaches P.1
  16: Message ({get,p1}) from P reaches P.1
  17: Message ({get,p3}) from P.4.1 reaches P.3
  18: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  19: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  20: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  21: Message (3) from P.1 reaches P
  22: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  23: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  24: Message ({put,3}) from P reaches P.2
  25: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  26: Message ({get,p1}) from P reaches P.1
  27: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  28: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  29: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  30: Message (3) from P.2 reaches P.4
  31: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  32: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  33: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  34: Message ({put,3}) from P.4 reaches P.3
  35: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  36: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  37: Message (3) from P.3 reaches P.4.1
  38: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  39: Message ({get,p2}) from P.4 reaches P.2
  40: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  41: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  42: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  43: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  44: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  45: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  46: Message ({leader,3}) from P.1 reaches P
  47: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  48: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: P: exits normally
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  53: Message ({leader,3}) from P.2 reaches P.4
  54: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  55: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  56: Message ({put,{leader,3}}) from P.4 reaches P.3
  57: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  58: P.4: exits normally
  59: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  60: Message ({get,p3}) from P.4.1 reaches P.3
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 34:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: Message ({get,p2}) from P.4 reaches P.2
  11: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  15: Message ({put,3}) from P.4.1 reaches P.1
  16: Message ({get,p1}) from P reaches P.1
  17: Message ({get,p3}) from P.4.1 reaches P.3
  18: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  19: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  20: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  21: Message (3) from P.1 reaches P
  22: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  23: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  24: Message ({put,3}) from P reaches P.2
  25: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  26: Message ({get,p1}) from P reaches P.1
  27: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  28: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  29: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  30: Message (3) from P.2 reaches P.4
  31: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  32: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  33: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  34: Message ({put,3}) from P.4 reaches P.3
  35: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  36: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  37: Message (3) from P.3 reaches P.4.1
  38: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  39: Message ({get,p2}) from P.4 reaches P.2
  40: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  41: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  42: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  43: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  44: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  45: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  46: Message ({leader,3}) from P.1 reaches P
  47: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  48: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: P: exits normally
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  53: Message ({leader,3}) from P.2 reaches P.4
  54: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  55: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  56: P.4: exits normally
  57: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  58: Message ({get,p3}) from P.4.1 reaches P.3
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 35:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: Message ({get,p2}) from P.4 reaches P.2
  11: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  15: Message ({put,3}) from P.4.1 reaches P.1
  16: Message ({get,p1}) from P reaches P.1
  17: Message ({get,p3}) from P.4.1 reaches P.3
  18: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  19: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  20: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  21: Message (3) from P.1 reaches P
  22: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  23: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  24: Message ({put,3}) from P reaches P.2
  25: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  26: Message ({get,p1}) from P reaches P.1
  27: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  28: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  29: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  30: Message (3) from P.2 reaches P.4
  31: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  32: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  33: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  34: Message ({put,3}) from P.4 reaches P.3
  35: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  36: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  37: Message (3) from P.3 reaches P.4.1
  38: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  42: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  43: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  44: Message ({leader,3}) from P.1 reaches P
  45: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  46: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  47: P: exits normally
  48: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: Message ({get,p2}) from P.4 reaches P.2
  51: Message ({get,p3}) from P.4.1 reaches P.3
  52: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  53: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  54: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  55: Message ({leader,3}) from P.2 reaches P.4
  56: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  57: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  58: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  62: Message ({leader,3}) from P.3 reaches P.4.1
  63: P.4: exits normally
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 36:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: Message ({get,p2}) from P.4 reaches P.2
  11: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  15: Message ({put,3}) from P.4.1 reaches P.1
  16: Message ({get,p1}) from P reaches P.1
  17: Message ({get,p3}) from P.4.1 reaches P.3
  18: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  19: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  20: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  21: Message (3) from P.1 reaches P
  22: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  23: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  24: Message ({put,3}) from P reaches P.2
  25: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  26: Message ({get,p1}) from P reaches P.1
  27: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  28: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  29: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  30: Message (3) from P.2 reaches P.4
  31: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  32: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  33: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  34: Message ({put,3}) from P.4 reaches P.3
  35: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  36: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  37: Message (3) from P.3 reaches P.4.1
  38: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  42: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  43: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  44: Message ({leader,3}) from P.1 reaches P
  45: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  46: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  47: P: exits normally
  48: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: Message ({get,p2}) from P.4 reaches P.2
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  53: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  54: Message ({leader,3}) from P.2 reaches P.4
  55: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  56: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  57: P.4: exits normally
  58: Message ({put,{leader,3}}) from P.4 reaches P.3
  59: Message ({get,p3}) from P.4.1 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 37:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: Message ({get,p2}) from P.4 reaches P.2
  11: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  15: Message ({put,3}) from P.4.1 reaches P.1
  16: Message ({get,p1}) from P reaches P.1
  17: Message ({get,p3}) from P.4.1 reaches P.3
  18: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  19: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  20: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  21: Message (3) from P.1 reaches P
  22: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  23: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  24: Message ({put,3}) from P reaches P.2
  25: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  26: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  27: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  28: Message (3) from P.2 reaches P.4
  29: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  30: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  31: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  32: Message ({put,3}) from P.4 reaches P.3
  33: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  34: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  35: Message (3) from P.3 reaches P.4.1
  36: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  37: Message ({get,p2}) from P.4 reaches P.2
  38: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  42: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  43: Message ({get,p1}) from P reaches P.1
  44: Message ({get,p3}) from P.4.1 reaches P.3
  45: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  46: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  47: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  48: Message ({leader,3}) from P.1 reaches P
  49: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  50: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  51: Message ({put,{leader,3}}) from P reaches P.2
  52: P: exits normally
  53: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  54: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  55: Message ({leader,3}) from P.2 reaches P.4
  56: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  57: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  58: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  62: Message ({leader,3}) from P.3 reaches P.4.1
  63: P.4: exits normally
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 38:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: Message ({get,p2}) from P.4 reaches P.2
  11: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  15: Message ({put,3}) from P.4.1 reaches P.1
  16: Message ({get,p1}) from P reaches P.1
  17: Message ({get,p3}) from P.4.1 reaches P.3
  18: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  19: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  20: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  21: Message (3) from P.1 reaches P
  22: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  23: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  24: Message ({put,3}) from P reaches P.2
  25: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  26: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  27: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  28: Message (3) from P.2 reaches P.4
  29: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  30: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  31: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  32: Message ({put,3}) from P.4 reaches P.3
  33: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  34: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  35: Message (3) from P.3 reaches P.4.1
  36: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  37: Message ({get,p2}) from P.4 reaches P.2
  38: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  42: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  43: Message ({get,p1}) from P reaches P.1
  44: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  45: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  46: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  47: Message ({leader,3}) from P.1 reaches P
  48: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  49: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  50: Message ({put,{leader,3}}) from P reaches P.2
  51: P: exits normally
  52: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  53: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  54: Message ({leader,3}) from P.2 reaches P.4
  55: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  56: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  57: P.4: exits normally
  58: Message ({put,{leader,3}}) from P.4 reaches P.3
  59: Message ({get,p3}) from P.4.1 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 39:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: Message ({get,p2}) from P.4 reaches P.2
  11: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  15: Message ({put,3}) from P.4.1 reaches P.1
  16: Message ({get,p1}) from P reaches P.1
  17: Message ({get,p3}) from P.4.1 reaches P.3
  18: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  19: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  20: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  21: Message (3) from P.1 reaches P
  22: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  23: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  24: Message ({put,3}) from P reaches P.2
  25: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  26: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  27: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  28: Message (3) from P.2 reaches P.4
  29: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  30: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  31: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  32: Message ({put,3}) from P.4 reaches P.3
  33: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  34: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  35: Message (3) from P.3 reaches P.4.1
  36: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  37: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  38: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  39: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  40: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  41: Message ({get,p1}) from P reaches P.1
  42: Message ({get,p3}) from P.4.1 reaches P.3
  43: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  44: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  45: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  46: Message ({leader,3}) from P.1 reaches P
  47: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  48: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  49: P: exits normally
  50: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  51: Message ({put,{leader,3}}) from P reaches P.2
  52: Message ({get,p2}) from P.4 reaches P.2
  53: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  54: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  55: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  56: Message ({leader,3}) from P.2 reaches P.4
  57: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  58: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  62: Message ({leader,3}) from P.3 reaches P.4.1
  63: P.4: exits normally
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 40:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: Message ({get,p2}) from P.4 reaches P.2
  11: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  15: Message ({put,3}) from P.4.1 reaches P.1
  16: Message ({get,p1}) from P reaches P.1
  17: Message ({get,p3}) from P.4.1 reaches P.3
  18: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  19: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  20: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  21: Message (3) from P.1 reaches P
  22: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  23: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  24: Message ({put,3}) from P reaches P.2
  25: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  26: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  27: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  28: Message (3) from P.2 reaches P.4
  29: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  30: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  31: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  32: Message ({put,3}) from P.4 reaches P.3
  33: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  34: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  35: Message (3) from P.3 reaches P.4.1
  36: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  37: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  38: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  39: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  40: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  41: Message ({get,p1}) from P reaches P.1
  42: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  43: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  44: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  45: Message ({leader,3}) from P.1 reaches P
  46: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  47: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  48: P: exits normally
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: Message ({get,p2}) from P.4 reaches P.2
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  53: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  54: Message ({leader,3}) from P.2 reaches P.4
  55: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  56: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  57: P.4: exits normally
  58: Message ({put,{leader,3}}) from P.4 reaches P.3
  59: Message ({get,p3}) from P.4.1 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 41:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: Message ({get,p2}) from P.4 reaches P.2
  11: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  15: Message ({put,3}) from P.4.1 reaches P.1
  16: Message ({get,p1}) from P reaches P.1
  17: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  18: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  19: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  20: Message (3) from P.1 reaches P
  21: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  22: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  23: Message ({put,3}) from P reaches P.2
  24: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  25: Message ({get,p1}) from P reaches P.1
  26: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  27: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  28: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  29: Message (3) from P.2 reaches P.4
  30: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  31: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  32: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  33: Message ({get,p2}) from P.4 reaches P.2
  34: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  35: Message ({put,3}) from P.4 reaches P.3
  36: Message ({get,p3}) from P.4.1 reaches P.3
  37: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  38: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  39: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  40: Message (3) from P.3 reaches P.4.1
  41: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  42: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  43: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  44: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  45: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  46: Message ({leader,3}) from P.1 reaches P
  47: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  48: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: P: exits normally
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  53: Message ({leader,3}) from P.2 reaches P.4
  54: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  55: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  56: Message ({put,{leader,3}}) from P.4 reaches P.3
  57: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  58: P.4: exits normally
  59: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  60: Message ({get,p3}) from P.4.1 reaches P.3
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 42:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: Message ({get,p2}) from P.4 reaches P.2
  11: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  15: Message ({put,3}) from P.4.1 reaches P.1
  16: Message ({get,p1}) from P reaches P.1
  17: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  18: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  19: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  20: Message (3) from P.1 reaches P
  21: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  22: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  23: Message ({put,3}) from P reaches P.2
  24: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  25: Message ({get,p1}) from P reaches P.1
  26: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  27: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  28: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  29: Message (3) from P.2 reaches P.4
  30: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  31: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  32: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  33: Message ({get,p2}) from P.4 reaches P.2
  34: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  35: Message ({put,3}) from P.4 reaches P.3
  36: Message ({get,p3}) from P.4.1 reaches P.3
  37: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  38: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  39: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  40: Message (3) from P.3 reaches P.4.1
  41: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  42: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  43: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  44: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  45: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  46: Message ({leader,3}) from P.1 reaches P
  47: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  48: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: P: exits normally
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  53: Message ({leader,3}) from P.2 reaches P.4
  54: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  55: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  56: P.4: exits normally
  57: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  58: Message ({get,p3}) from P.4.1 reaches P.3
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 43:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: Message ({get,p2}) from P.4 reaches P.2
  11: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  15: Message ({put,3}) from P.4.1 reaches P.1
  16: Message ({get,p1}) from P reaches P.1
  17: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  18: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  19: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  20: Message (3) from P.1 reaches P
  21: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  22: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  23: Message ({put,3}) from P reaches P.2
  24: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  25: Message ({get,p1}) from P reaches P.1
  26: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  27: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  28: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  29: Message (3) from P.2 reaches P.4
  30: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  31: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  32: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  33: Message ({put,3}) from P.4 reaches P.3
  34: Message ({get,p3}) from P.4.1 reaches P.3
  35: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  36: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  37: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  38: Message (3) from P.3 reaches P.4.1
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  42: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  43: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  44: Message ({leader,3}) from P.1 reaches P
  45: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  46: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  47: P: exits normally
  48: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: Message ({get,p2}) from P.4 reaches P.2
  51: Message ({get,p3}) from P.4.1 reaches P.3
  52: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  53: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  54: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  55: Message ({leader,3}) from P.2 reaches P.4
  56: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  57: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  58: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  62: Message ({leader,3}) from P.3 reaches P.4.1
  63: P.4: exits normally
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 44:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: Message ({get,p2}) from P.4 reaches P.2
  11: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  15: Message ({put,3}) from P.4.1 reaches P.1
  16: Message ({get,p1}) from P reaches P.1
  17: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  18: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  19: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  20: Message (3) from P.1 reaches P
  21: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  22: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  23: Message ({put,3}) from P reaches P.2
  24: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  25: Message ({get,p1}) from P reaches P.1
  26: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  27: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  28: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  29: Message (3) from P.2 reaches P.4
  30: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  31: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  32: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  33: Message ({put,3}) from P.4 reaches P.3
  34: Message ({get,p3}) from P.4.1 reaches P.3
  35: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  36: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  37: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  38: Message (3) from P.3 reaches P.4.1
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  42: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  43: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  44: Message ({leader,3}) from P.1 reaches P
  45: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  46: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  47: P: exits normally
  48: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: Message ({get,p2}) from P.4 reaches P.2
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  53: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  54: Message ({leader,3}) from P.2 reaches P.4
  55: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  56: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  57: P.4: exits normally
  58: Message ({put,{leader,3}}) from P.4 reaches P.3
  59: Message ({get,p3}) from P.4.1 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 45:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: Message ({get,p2}) from P.4 reaches P.2
  11: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  15: Message ({put,3}) from P.4.1 reaches P.1
  16: Message ({get,p1}) from P reaches P.1
  17: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  18: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  19: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  20: Message (3) from P.1 reaches P
  21: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  22: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  23: Message ({put,3}) from P reaches P.2
  24: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  25: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  26: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  27: Message (3) from P.2 reaches P.4
  28: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  29: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  30: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  31: Message ({get,p2}) from P.4 reaches P.2
  32: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  33: Message ({put,3}) from P.4 reaches P.3
  34: Message ({get,p3}) from P.4.1 reaches P.3
  35: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  36: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  37: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  38: Message (3) from P.3 reaches P.4.1
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  42: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  43: Message ({get,p1}) from P reaches P.1
  44: Message ({get,p3}) from P.4.1 reaches P.3
  45: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  46: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  47: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  48: Message ({leader,3}) from P.1 reaches P
  49: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  50: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  51: Message ({put,{leader,3}}) from P reaches P.2
  52: P: exits normally
  53: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  54: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  55: Message ({leader,3}) from P.2 reaches P.4
  56: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  57: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  58: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  62: Message ({leader,3}) from P.3 reaches P.4.1
  63: P.4: exits normally
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 46:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: Message ({get,p2}) from P.4 reaches P.2
  11: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  15: Message ({put,3}) from P.4.1 reaches P.1
  16: Message ({get,p1}) from P reaches P.1
  17: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  18: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  19: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  20: Message (3) from P.1 reaches P
  21: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  22: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  23: Message ({put,3}) from P reaches P.2
  24: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  25: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  26: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  27: Message (3) from P.2 reaches P.4
  28: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  29: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  30: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  31: Message ({get,p2}) from P.4 reaches P.2
  32: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  33: Message ({put,3}) from P.4 reaches P.3
  34: Message ({get,p3}) from P.4.1 reaches P.3
  35: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  36: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  37: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  38: Message (3) from P.3 reaches P.4.1
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  42: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  43: Message ({get,p1}) from P reaches P.1
  44: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  45: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  46: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  47: Message ({leader,3}) from P.1 reaches P
  48: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  49: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  50: Message ({put,{leader,3}}) from P reaches P.2
  51: P: exits normally
  52: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  53: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  54: Message ({leader,3}) from P.2 reaches P.4
  55: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  56: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  57: P.4: exits normally
  58: Message ({put,{leader,3}}) from P.4 reaches P.3
  59: Message ({get,p3}) from P.4.1 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 47:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: Message ({get,p2}) from P.4 reaches P.2
  11: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  15: Message ({put,3}) from P.4.1 reaches P.1
  16: Message ({get,p1}) from P reaches P.1
  17: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  18: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  19: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  20: Message (3) from P.1 reaches P
  21: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  22: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  23: Message ({put,3}) from P reaches P.2
  24: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  25: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  26: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  27: Message (3) from P.2 reaches P.4
  28: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  29: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  30: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  31: Message ({put,3}) from P.4 reaches P.3
  32: Message ({get,p3}) from P.4.1 reaches P.3
  33: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  34: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  35: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  36: Message (3) from P.3 reaches P.4.1
  37: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  38: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  39: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  40: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  41: Message ({get,p1}) from P reaches P.1
  42: Message ({get,p3}) from P.4.1 reaches P.3
  43: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  44: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  45: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  46: Message ({leader,3}) from P.1 reaches P
  47: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  48: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  49: P: exits normally
  50: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  51: Message ({put,{leader,3}}) from P reaches P.2
  52: Message ({get,p2}) from P.4 reaches P.2
  53: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  54: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  55: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  56: Message ({leader,3}) from P.2 reaches P.4
  57: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  58: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  62: Message ({leader,3}) from P.3 reaches P.4.1
  63: P.4: exits normally
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 48:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: Message ({get,p2}) from P.4 reaches P.2
  11: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  12: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  13: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  14: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  15: Message ({put,3}) from P.4.1 reaches P.1
  16: Message ({get,p1}) from P reaches P.1
  17: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  18: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  19: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  20: Message (3) from P.1 reaches P
  21: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  22: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  23: Message ({put,3}) from P reaches P.2
  24: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  25: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  26: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  27: Message (3) from P.2 reaches P.4
  28: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  29: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  30: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  31: Message ({put,3}) from P.4 reaches P.3
  32: Message ({get,p3}) from P.4.1 reaches P.3
  33: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  34: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  35: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  36: Message (3) from P.3 reaches P.4.1
  37: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  38: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  39: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  40: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  41: Message ({get,p1}) from P reaches P.1
  42: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  43: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  44: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  45: Message ({leader,3}) from P.1 reaches P
  46: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  47: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  48: P: exits normally
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: Message ({get,p2}) from P.4 reaches P.2
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  53: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  54: Message ({leader,3}) from P.2 reaches P.4
  55: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  56: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  57: P.4: exits normally
  58: Message ({put,{leader,3}}) from P.4 reaches P.3
  59: Message ({get,p3}) from P.4.1 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 49:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  12: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  13: Message ({put,3}) from P.4.1 reaches P.1
  14: Message ({get,p1}) from P reaches P.1
  15: Message ({get,p3}) from P.4.1 reaches P.3
  16: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  17: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  18: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  19: Message (3) from P.1 reaches P
  20: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  21: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  22: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  23: Message ({get,p1}) from P reaches P.1
  24: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  25: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  26: Message ({put,3}) from P reaches P.2
  27: Message ({get,p2}) from P.4 reaches P.2
  28: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  29: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  30: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  31: Message (3) from P.2 reaches P.4
  32: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  33: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  34: Message ({put,3}) from P.4 reaches P.3
  35: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  36: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  37: Message (3) from P.3 reaches P.4.1
  38: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  39: Message ({get,p2}) from P.4 reaches P.2
  40: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  41: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  42: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  43: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  44: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  45: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  46: Message ({leader,3}) from P.1 reaches P
  47: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  48: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: P: exits normally
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  53: Message ({leader,3}) from P.2 reaches P.4
  54: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  55: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  56: Message ({put,{leader,3}}) from P.4 reaches P.3
  57: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  58: P.4: exits normally
  59: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  60: Message ({get,p3}) from P.4.1 reaches P.3
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 50:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  12: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  13: Message ({put,3}) from P.4.1 reaches P.1
  14: Message ({get,p1}) from P reaches P.1
  15: Message ({get,p3}) from P.4.1 reaches P.3
  16: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  17: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  18: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  19: Message (3) from P.1 reaches P
  20: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  21: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  22: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  23: Message ({get,p1}) from P reaches P.1
  24: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  25: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  26: Message ({put,3}) from P reaches P.2
  27: Message ({get,p2}) from P.4 reaches P.2
  28: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  29: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  30: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  31: Message (3) from P.2 reaches P.4
  32: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  33: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  34: Message ({put,3}) from P.4 reaches P.3
  35: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  36: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  37: Message (3) from P.3 reaches P.4.1
  38: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  39: Message ({get,p2}) from P.4 reaches P.2
  40: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  41: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  42: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  43: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  44: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  45: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  46: Message ({leader,3}) from P.1 reaches P
  47: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  48: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: P: exits normally
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  53: Message ({leader,3}) from P.2 reaches P.4
  54: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  55: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  56: P.4: exits normally
  57: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  58: Message ({get,p3}) from P.4.1 reaches P.3
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 51:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  12: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  13: Message ({put,3}) from P.4.1 reaches P.1
  14: Message ({get,p1}) from P reaches P.1
  15: Message ({get,p3}) from P.4.1 reaches P.3
  16: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  17: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  18: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  19: Message (3) from P.1 reaches P
  20: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  21: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  22: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  23: Message ({get,p1}) from P reaches P.1
  24: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  25: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  26: Message ({put,3}) from P reaches P.2
  27: Message ({get,p2}) from P.4 reaches P.2
  28: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  29: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  30: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  31: Message (3) from P.2 reaches P.4
  32: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  33: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  34: Message ({put,3}) from P.4 reaches P.3
  35: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  36: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  37: Message (3) from P.3 reaches P.4.1
  38: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  42: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  43: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  44: Message ({leader,3}) from P.1 reaches P
  45: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  46: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  47: P: exits normally
  48: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: Message ({get,p2}) from P.4 reaches P.2
  51: Message ({get,p3}) from P.4.1 reaches P.3
  52: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  53: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  54: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  55: Message ({leader,3}) from P.2 reaches P.4
  56: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  57: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  58: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  62: Message ({leader,3}) from P.3 reaches P.4.1
  63: P.4: exits normally
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 52:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  12: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  13: Message ({put,3}) from P.4.1 reaches P.1
  14: Message ({get,p1}) from P reaches P.1
  15: Message ({get,p3}) from P.4.1 reaches P.3
  16: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  17: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  18: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  19: Message (3) from P.1 reaches P
  20: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  21: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  22: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  23: Message ({get,p1}) from P reaches P.1
  24: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  25: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  26: Message ({put,3}) from P reaches P.2
  27: Message ({get,p2}) from P.4 reaches P.2
  28: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  29: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  30: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  31: Message (3) from P.2 reaches P.4
  32: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  33: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  34: Message ({put,3}) from P.4 reaches P.3
  35: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  36: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  37: Message (3) from P.3 reaches P.4.1
  38: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  42: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  43: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  44: Message ({leader,3}) from P.1 reaches P
  45: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  46: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  47: P: exits normally
  48: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: Message ({get,p2}) from P.4 reaches P.2
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  53: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  54: Message ({leader,3}) from P.2 reaches P.4
  55: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  56: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  57: P.4: exits normally
  58: Message ({put,{leader,3}}) from P.4 reaches P.3
  59: Message ({get,p3}) from P.4.1 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 53:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  12: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  13: Message ({put,3}) from P.4.1 reaches P.1
  14: Message ({get,p1}) from P reaches P.1
  15: Message ({get,p3}) from P.4.1 reaches P.3
  16: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  17: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  18: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  19: Message (3) from P.1 reaches P
  20: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  21: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  22: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  23: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  24: Message ({put,3}) from P reaches P.2
  25: Message ({get,p2}) from P.4 reaches P.2
  26: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  27: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  28: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  29: Message (3) from P.2 reaches P.4
  30: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  31: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  32: Message ({put,3}) from P.4 reaches P.3
  33: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  34: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  35: Message (3) from P.3 reaches P.4.1
  36: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  37: Message ({get,p2}) from P.4 reaches P.2
  38: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  42: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  43: Message ({get,p1}) from P reaches P.1
  44: Message ({get,p3}) from P.4.1 reaches P.3
  45: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  46: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  47: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  48: Message ({leader,3}) from P.1 reaches P
  49: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  50: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  51: Message ({put,{leader,3}}) from P reaches P.2
  52: P: exits normally
  53: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  54: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  55: Message ({leader,3}) from P.2 reaches P.4
  56: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  57: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  58: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  62: Message ({leader,3}) from P.3 reaches P.4.1
  63: P.4: exits normally
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 54:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  12: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  13: Message ({put,3}) from P.4.1 reaches P.1
  14: Message ({get,p1}) from P reaches P.1
  15: Message ({get,p3}) from P.4.1 reaches P.3
  16: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  17: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  18: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  19: Message (3) from P.1 reaches P
  20: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  21: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  22: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  23: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  24: Message ({put,3}) from P reaches P.2
  25: Message ({get,p2}) from P.4 reaches P.2
  26: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  27: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  28: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  29: Message (3) from P.2 reaches P.4
  30: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  31: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  32: Message ({put,3}) from P.4 reaches P.3
  33: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  34: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  35: Message (3) from P.3 reaches P.4.1
  36: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  37: Message ({get,p2}) from P.4 reaches P.2
  38: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  42: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  43: Message ({get,p1}) from P reaches P.1
  44: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  45: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  46: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  47: Message ({leader,3}) from P.1 reaches P
  48: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  49: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  50: Message ({put,{leader,3}}) from P reaches P.2
  51: P: exits normally
  52: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  53: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  54: Message ({leader,3}) from P.2 reaches P.4
  55: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  56: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  57: P.4: exits normally
  58: Message ({put,{leader,3}}) from P.4 reaches P.3
  59: Message ({get,p3}) from P.4.1 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 55:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  12: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  13: Message ({put,3}) from P.4.1 reaches P.1
  14: Message ({get,p1}) from P reaches P.1
  15: Message ({get,p3}) from P.4.1 reaches P.3
  16: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  17: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  18: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  19: Message (3) from P.1 reaches P
  20: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  21: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  22: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  23: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  24: Message ({put,3}) from P reaches P.2
  25: Message ({get,p2}) from P.4 reaches P.2
  26: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  27: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  28: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  29: Message (3) from P.2 reaches P.4
  30: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  31: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  32: Message ({put,3}) from P.4 reaches P.3
  33: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  34: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  35: Message (3) from P.3 reaches P.4.1
  36: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  37: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  38: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  39: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  40: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  41: Message ({get,p1}) from P reaches P.1
  42: Message ({get,p3}) from P.4.1 reaches P.3
  43: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  44: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  45: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  46: Message ({leader,3}) from P.1 reaches P
  47: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  48: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  49: P: exits normally
  50: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  51: Message ({put,{leader,3}}) from P reaches P.2
  52: Message ({get,p2}) from P.4 reaches P.2
  53: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  54: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  55: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  56: Message ({leader,3}) from P.2 reaches P.4
  57: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  58: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  62: Message ({leader,3}) from P.3 reaches P.4.1
  63: P.4: exits normally
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 56:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  12: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  13: Message ({put,3}) from P.4.1 reaches P.1
  14: Message ({get,p1}) from P reaches P.1
  15: Message ({get,p3}) from P.4.1 reaches P.3
  16: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  17: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  18: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  19: Message (3) from P.1 reaches P
  20: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  21: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  22: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  23: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  24: Message ({put,3}) from P reaches P.2
  25: Message ({get,p2}) from P.4 reaches P.2
  26: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  27: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  28: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  29: Message (3) from P.2 reaches P.4
  30: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  31: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  32: Message ({put,3}) from P.4 reaches P.3
  33: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  34: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  35: Message (3) from P.3 reaches P.4.1
  36: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  37: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  38: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  39: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  40: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  41: Message ({get,p1}) from P reaches P.1
  42: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  43: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  44: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  45: Message ({leader,3}) from P.1 reaches P
  46: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  47: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  48: P: exits normally
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: Message ({get,p2}) from P.4 reaches P.2
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  53: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  54: Message ({leader,3}) from P.2 reaches P.4
  55: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  56: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  57: P.4: exits normally
  58: Message ({put,{leader,3}}) from P.4 reaches P.3
  59: Message ({get,p3}) from P.4.1 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 57:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  12: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  13: Message ({put,3}) from P.4.1 reaches P.1
  14: Message ({get,p1}) from P reaches P.1
  15: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  16: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  17: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  18: Message (3) from P.1 reaches P
  19: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  20: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  21: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  22: Message ({get,p1}) from P reaches P.1
  23: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  24: Message ({put,3}) from P reaches P.2
  25: Message ({get,p2}) from P.4 reaches P.2
  26: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  27: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  28: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  29: Message (3) from P.2 reaches P.4
  30: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  31: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  32: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  33: Message ({get,p2}) from P.4 reaches P.2
  34: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  35: Message ({put,3}) from P.4 reaches P.3
  36: Message ({get,p3}) from P.4.1 reaches P.3
  37: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  38: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  39: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  40: Message (3) from P.3 reaches P.4.1
  41: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  42: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  43: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  44: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  45: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  46: Message ({leader,3}) from P.1 reaches P
  47: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  48: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: P: exits normally
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  53: Message ({leader,3}) from P.2 reaches P.4
  54: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  55: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  56: Message ({put,{leader,3}}) from P.4 reaches P.3
  57: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  58: P.4: exits normally
  59: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  60: Message ({get,p3}) from P.4.1 reaches P.3
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 58:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  12: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  13: Message ({put,3}) from P.4.1 reaches P.1
  14: Message ({get,p1}) from P reaches P.1
  15: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  16: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  17: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  18: Message (3) from P.1 reaches P
  19: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  20: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  21: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  22: Message ({get,p1}) from P reaches P.1
  23: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  24: Message ({put,3}) from P reaches P.2
  25: Message ({get,p2}) from P.4 reaches P.2
  26: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  27: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  28: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  29: Message (3) from P.2 reaches P.4
  30: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  31: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  32: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  33: Message ({get,p2}) from P.4 reaches P.2
  34: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  35: Message ({put,3}) from P.4 reaches P.3
  36: Message ({get,p3}) from P.4.1 reaches P.3
  37: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  38: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  39: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  40: Message (3) from P.3 reaches P.4.1
  41: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  42: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  43: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  44: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  45: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  46: Message ({leader,3}) from P.1 reaches P
  47: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  48: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: P: exits normally
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  53: Message ({leader,3}) from P.2 reaches P.4
  54: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  55: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  56: P.4: exits normally
  57: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  58: Message ({get,p3}) from P.4.1 reaches P.3
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 59:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  12: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  13: Message ({put,3}) from P.4.1 reaches P.1
  14: Message ({get,p1}) from P reaches P.1
  15: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  16: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  17: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  18: Message (3) from P.1 reaches P
  19: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  20: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  21: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  22: Message ({get,p1}) from P reaches P.1
  23: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  24: Message ({put,3}) from P reaches P.2
  25: Message ({get,p2}) from P.4 reaches P.2
  26: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  27: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  28: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  29: Message (3) from P.2 reaches P.4
  30: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  31: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  32: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  33: Message ({put,3}) from P.4 reaches P.3
  34: Message ({get,p3}) from P.4.1 reaches P.3
  35: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  36: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  37: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  38: Message (3) from P.3 reaches P.4.1
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  42: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  43: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  44: Message ({leader,3}) from P.1 reaches P
  45: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  46: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  47: P: exits normally
  48: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: Message ({get,p2}) from P.4 reaches P.2
  51: Message ({get,p3}) from P.4.1 reaches P.3
  52: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  53: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  54: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  55: Message ({leader,3}) from P.2 reaches P.4
  56: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  57: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  58: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  62: Message ({leader,3}) from P.3 reaches P.4.1
  63: P.4: exits normally
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 60:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  12: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  13: Message ({put,3}) from P.4.1 reaches P.1
  14: Message ({get,p1}) from P reaches P.1
  15: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  16: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  17: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  18: Message (3) from P.1 reaches P
  19: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  20: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  21: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  22: Message ({get,p1}) from P reaches P.1
  23: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  24: Message ({put,3}) from P reaches P.2
  25: Message ({get,p2}) from P.4 reaches P.2
  26: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  27: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  28: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  29: Message (3) from P.2 reaches P.4
  30: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  31: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  32: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  33: Message ({put,3}) from P.4 reaches P.3
  34: Message ({get,p3}) from P.4.1 reaches P.3
  35: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  36: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  37: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  38: Message (3) from P.3 reaches P.4.1
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  42: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  43: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  44: Message ({leader,3}) from P.1 reaches P
  45: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  46: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  47: P: exits normally
  48: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: Message ({get,p2}) from P.4 reaches P.2
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  53: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  54: Message ({leader,3}) from P.2 reaches P.4
  55: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  56: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  57: P.4: exits normally
  58: Message ({put,{leader,3}}) from P.4 reaches P.3
  59: Message ({get,p3}) from P.4.1 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 61:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  12: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  13: Message ({put,3}) from P.4.1 reaches P.1
  14: Message ({get,p1}) from P reaches P.1
  15: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  16: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  17: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  18: Message (3) from P.1 reaches P
  19: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  20: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  21: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  22: Message ({put,3}) from P reaches P.2
  23: Message ({get,p2}) from P.4 reaches P.2
  24: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  25: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  26: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  27: Message (3) from P.2 reaches P.4
  28: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  29: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  30: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  31: Message ({get,p2}) from P.4 reaches P.2
  32: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  33: Message ({put,3}) from P.4 reaches P.3
  34: Message ({get,p3}) from P.4.1 reaches P.3
  35: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  36: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  37: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  38: Message (3) from P.3 reaches P.4.1
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  42: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  43: Message ({get,p1}) from P reaches P.1
  44: Message ({get,p3}) from P.4.1 reaches P.3
  45: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  46: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  47: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  48: Message ({leader,3}) from P.1 reaches P
  49: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  50: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  51: Message ({put,{leader,3}}) from P reaches P.2
  52: P: exits normally
  53: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  54: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  55: Message ({leader,3}) from P.2 reaches P.4
  56: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  57: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  58: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  62: Message ({leader,3}) from P.3 reaches P.4.1
  63: P.4: exits normally
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 62:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  12: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  13: Message ({put,3}) from P.4.1 reaches P.1
  14: Message ({get,p1}) from P reaches P.1
  15: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  16: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  17: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  18: Message (3) from P.1 reaches P
  19: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  20: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  21: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  22: Message ({put,3}) from P reaches P.2
  23: Message ({get,p2}) from P.4 reaches P.2
  24: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  25: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  26: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  27: Message (3) from P.2 reaches P.4
  28: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  29: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  30: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  31: Message ({get,p2}) from P.4 reaches P.2
  32: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  33: Message ({put,3}) from P.4 reaches P.3
  34: Message ({get,p3}) from P.4.1 reaches P.3
  35: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  36: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  37: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  38: Message (3) from P.3 reaches P.4.1
  39: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  40: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  41: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  42: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  43: Message ({get,p1}) from P reaches P.1
  44: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  45: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  46: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  47: Message ({leader,3}) from P.1 reaches P
  48: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  49: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  50: Message ({put,{leader,3}}) from P reaches P.2
  51: P: exits normally
  52: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  53: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  54: Message ({leader,3}) from P.2 reaches P.4
  55: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  56: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  57: P.4: exits normally
  58: Message ({put,{leader,3}}) from P.4 reaches P.3
  59: Message ({get,p3}) from P.4.1 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 63:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  12: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  13: Message ({put,3}) from P.4.1 reaches P.1
  14: Message ({get,p1}) from P reaches P.1
  15: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  16: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  17: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  18: Message (3) from P.1 reaches P
  19: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  20: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  21: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  22: Message ({put,3}) from P reaches P.2
  23: Message ({get,p2}) from P.4 reaches P.2
  24: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  25: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  26: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  27: Message (3) from P.2 reaches P.4
  28: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  29: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  30: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  31: Message ({put,3}) from P.4 reaches P.3
  32: Message ({get,p3}) from P.4.1 reaches P.3
  33: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  34: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  35: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  36: Message (3) from P.3 reaches P.4.1
  37: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  38: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  39: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  40: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  41: Message ({get,p1}) from P reaches P.1
  42: Message ({get,p3}) from P.4.1 reaches P.3
  43: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  44: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  45: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  46: Message ({leader,3}) from P.1 reaches P
  47: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  48: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  49: P: exits normally
  50: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  51: Message ({put,{leader,3}}) from P reaches P.2
  52: Message ({get,p2}) from P.4 reaches P.2
  53: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  54: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  55: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  56: Message ({leader,3}) from P.2 reaches P.4
  57: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  58: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  59: Message ({put,{leader,3}}) from P.4 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  62: Message ({leader,3}) from P.3 reaches P.4.1
  63: P.4: exits normally
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Erroneous interleaving 64:
* Blocked at a 'receive' (when all other processes have exited):
    P.1 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.2 in ring_leader_election_symmetric_buffer_2.erl line 61
    P.3 in ring_leader_election_symmetric_buffer_2.erl line 61
--------------------------------------------------------------------------------
Interleaving info:
   1: P: P.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   2: P: P.2 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   3: P: P.3 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.4.90731959>,[]])
    in erlang.erl line 2329
   4: P: P.4 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   5: P: true = erlang:register(p1, P)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   6: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
   7: P.4: P.4.1 = erlang:spawn(erlang, apply, [#Fun<ring_leader_election_symmetric_buffer_2.0.90731959>,[]])
    in erlang.erl line 2329
   8: P.4: true = erlang:register(p2, P.4)
    in ring_leader_election_symmetric_buffer_2.erl line 23
   9: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  10: P.4.1: true = erlang:register(p3, P.4.1)
    in ring_leader_election_symmetric_buffer_2.erl line 23
  11: P.4.1: {put,3} = P.1 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  12: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  13: Message ({put,3}) from P.4.1 reaches P.1
  14: Message ({get,p1}) from P reaches P.1
  15: P.1: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  16: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  17: P.1: 3 = p1 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  18: Message (3) from P.1 reaches P
  19: P: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  20: P: {put,3} = P.2 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  21: P: {get,p1} = P.1 ! {get,p1}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  22: Message ({put,3}) from P reaches P.2
  23: Message ({get,p2}) from P.4 reaches P.2
  24: P.2: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  25: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  26: P.2: 3 = p2 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  27: Message (3) from P.2 reaches P.4
  28: P.4: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  29: P.4: {put,3} = P.3 ! {put,3}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  30: P.4: {get,p2} = P.2 ! {get,p2}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  31: Message ({put,3}) from P.4 reaches P.3
  32: Message ({get,p3}) from P.4.1 reaches P.3
  33: P.3: receives message ({put,3})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  34: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  35: P.3: 3 = p3 ! 3
    in ring_leader_election_symmetric_buffer_2.erl line 73
  36: Message (3) from P.3 reaches P.4.1
  37: P.4.1: receives message (3)
    in ring_leader_election_symmetric_buffer_2.erl line 90
  38: P.4.1: {put,{leader,3}} = P.1 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  39: P.4.1: {get,p3} = P.3 ! {get,p3}
    in ring_leader_election_symmetric_buffer_2.erl line 89
  40: Message ({put,{leader,3}}) from P.4.1 reaches P.1
  41: Message ({get,p1}) from P reaches P.1
  42: P.1: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  43: P.1: receives message ({get,p1})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  44: P.1: {leader,3} = p1 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  45: Message ({leader,3}) from P.1 reaches P
  46: P: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  47: P: {put,{leader,3}} = P.2 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  48: P: exits normally
  49: Message ({put,{leader,3}}) from P reaches P.2
  50: Message ({get,p2}) from P.4 reaches P.2
  51: P.2: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  52: P.2: receives message ({get,p2})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  53: P.2: {leader,3} = p2 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  54: Message ({leader,3}) from P.2 reaches P.4
  55: P.4: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  56: P.4: {put,{leader,3}} = P.3 ! {put,{leader,3}}
    in ring_leader_election_symmetric_buffer_2.erl line 86
  57: P.4: exits normally
  58: Message ({put,{leader,3}}) from P.4 reaches P.3
  59: Message ({get,p3}) from P.4.1 reaches P.3
  60: P.3: receives message ({put,{leader,3}})
    in ring_leader_election_symmetric_buffer_2.erl line 61
  61: P.3: receives message ({get,p3})
    in ring_leader_election_symmetric_buffer_2.erl line 76
  62: P.3: {leader,3} = p3 ! {leader,3}
    in ring_leader_election_symmetric_buffer_2.erl line 73
  63: Message ({leader,3}) from P.3 reaches P.4.1
  64: P.4.1: receives message ({leader,3})
    in ring_leader_election_symmetric_buffer_2.erl line 90
  65: P.4.1: exits normally
################################################################################
Done! (Exit status: completed)
  Summary: 64 errors, 64/64 interleavings explored
