Concuerror v0.17 ('91764ec') started at 19 Sep 2017 14:55:35
 Options:
  [{after_timeout,infinity},
   {assertions_only,false},
   {assume_racing,false},
   {depth_bound,500},
   {disable_sleep_sets,false},
   {dpor,optimal},
   {entry_point,{many_links,many_links,[]}},
   {exclude_module,[]},
   {files,["/home/stavros/git/Concuerror/tests/suites/basic_tests/src/many_links.erl"]},
   {ignore_error,[]},
   {instant_delivery,true},
   {interleaving_bound,infinity},
   {keep_going,true},
   {non_racing_system,[]},
   {print_depth,20},
   {quiet,true},
   {scheduling,round_robin},
   {scheduling_bound_type,none},
   {show_races,false},
   {strict_scheduling,false},
   {symbolic_names,true},
   {timeout,infinity},
   {treat_as_normal,[]},
   {use_receive_patterns,true}]
################################################################################
Interleaving #1
--------------------------------------------------------------------------------
Errors found:
* Blocked at a 'receive' ("deadlocked"; other processes have exited):
    P in many_links.erl line 14
--------------------------------------------------------------------------------
Event trace:
   1: P: false = erlang:process_flag(trap_exit, true)
    in many_links.erl line 9
   2: P: P.1 = erlang:spawn(erlang, apply, [#Fun<many_links.'-many_links/0-fun-0-'.0>,[]])
    in erlang.erl line 2673
   3: P: P.2 = erlang:spawn(erlang, apply, [#Fun<many_links.'-many_links/0-fun-1-'.0>,[]])
    in erlang.erl line 2673
   4: P: true = erlang:link(P.1)
    in many_links.erl line 12
   5: P: true = erlang:link(P.2)
    in many_links.erl line 13
   6: P.1: exits normally
   7: P.1: true = erlang:exit(P, normal)
    (while exiting)
   8: P.2: exits normally
   9: P.2: true = erlang:exit(P, normal)
    (while exiting)
################################################################################
Interleaving #2
--------------------------------------------------------------------------------
Errors found:
* Blocked at a 'receive' ("deadlocked"; other processes have exited):
    P in many_links.erl line 14
--------------------------------------------------------------------------------
Event trace:
   1: P: false = erlang:process_flag(trap_exit, true)
    in many_links.erl line 9
   2: P: P.1 = erlang:spawn(erlang, apply, [#Fun<many_links.'-many_links/0-fun-0-'.0>,[]])
    in erlang.erl line 2673
   3: P: P.2 = erlang:spawn(erlang, apply, [#Fun<many_links.'-many_links/0-fun-1-'.0>,[]])
    in erlang.erl line 2673
   4: P: true = erlang:link(P.1)
    in many_links.erl line 12
   5: P.1: exits normally
   6: P.1: true = erlang:exit(P, normal)
    (while exiting)
   7: P.2: exits normally
   8: P: true = erlang:link(P.2)
    in many_links.erl line 13
################################################################################
Interleaving #3
--------------------------------------------------------------------------------
Errors found:
* Blocked at a 'receive' ("deadlocked"; other processes have exited):
    P in many_links.erl line 14
--------------------------------------------------------------------------------
Event trace:
   1: P: false = erlang:process_flag(trap_exit, true)
    in many_links.erl line 9
   2: P: P.1 = erlang:spawn(erlang, apply, [#Fun<many_links.'-many_links/0-fun-0-'.0>,[]])
    in erlang.erl line 2673
   3: P: P.2 = erlang:spawn(erlang, apply, [#Fun<many_links.'-many_links/0-fun-1-'.0>,[]])
    in erlang.erl line 2673
   4: P.1: exits normally
   5: P.2: exits normally
   6: P: true = erlang:link(P.1)
    in many_links.erl line 12
   7: P: true = erlang:link(P.2)
    in many_links.erl line 13
################################################################################
Interleaving #4
--------------------------------------------------------------------------------
Errors found:
* Blocked at a 'receive' ("deadlocked"; other processes have exited):
    P in many_links.erl line 14
--------------------------------------------------------------------------------
Event trace:
   1: P: false = erlang:process_flag(trap_exit, true)
    in many_links.erl line 9
   2: P: P.1 = erlang:spawn(erlang, apply, [#Fun<many_links.'-many_links/0-fun-0-'.0>,[]])
    in erlang.erl line 2673
   3: P: P.2 = erlang:spawn(erlang, apply, [#Fun<many_links.'-many_links/0-fun-1-'.0>,[]])
    in erlang.erl line 2673
   4: P.1: exits normally
   5: P: true = erlang:link(P.1)
    in many_links.erl line 12
   6: P: true = erlang:link(P.2)
    in many_links.erl line 13
   7: P.2: exits normally
   8: P.2: true = erlang:exit(P, normal)
    (while exiting)
################################################################################
Exploration completed!
################################################################################
Tips:
--------------------------------------------------------------------------------
Increase '--print_depth' if output/graph contains "...".

################################################################################
Info:
--------------------------------------------------------------------------------
Instrumented & loaded module many_links
Automatically instrumented module io_lib
Automatically instrumented module erlang
You can see pairs of racing instructions (in the report and '--graph') with '--show_races true'
Continuing after error (-k)

################################################################################
Done at 19 Sep 2017 14:55:36 (Exit status: error)
  Summary: 4 errors, 4/4 interleavings explored
