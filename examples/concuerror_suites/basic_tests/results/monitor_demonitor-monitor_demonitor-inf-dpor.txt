Concuerror 0.20.0+build.2158.ref04ee269 started at 17 Aug 2018 17:03:24
 Options:
  [{after_timeout,infinity},
   {assertions_only,false},
   {assume_racing,false},
   {depth_bound,500},
   {disable_sleep_sets,false},
   {dpor,optimal},
   {entry_point,{monitor_demonitor,monitor_demonitor,[]}},
   {exclude_module,[]},
   {files,["/Users/stavros.aronis/git/Concuerror/tests/suites/basic_tests/src/monitor_demonitor.erl"]},
   {first_process_errors_only,false},
   {ignore_error,[]},
   {instant_delivery,true},
   {interleaving_bound,infinity},
   {keep_going,true},
   {non_racing_system,[]},
   {print_depth,20},
   {quiet,true},
   {scheduling,round_robin},
   {scheduling_bound_type,none},
   {show_races,false},
   {strict_scheduling,false},
   {symbolic_names,true},
   {timeout,5000},
   {treat_as_normal,[]},
   {use_receive_patterns,true}]
################################################################################
Interleaving #2
--------------------------------------------------------------------------------
Errors found:
* Blocked at a 'receive' ("deadlocked"; other processes have exited):
    <P.4> in monitor_demonitor.erl line 25
     Mailbox contents: []
--------------------------------------------------------------------------------
Event trace:
   1: <P>: <P.1> = erlang:spawn(erlang, apply, [#Fun<monitor_demonitor.0.38703729>,[]])
    in erlang.erl line 2687
   2: <P>: <P.2> = erlang:spawn(erlang, apply, [#Fun<monitor_demonitor.1.38703729>,[]])
    in erlang.erl line 2687
   3: <P>: <P.3> = erlang:spawn(erlang, apply, [#Fun<monitor_demonitor.2.38703729>,[]])
    in erlang.erl line 2687
   4: <P>: <P.4> = erlang:spawn(erlang, apply, [#Fun<monitor_demonitor.3.38703729>,[]])
    in erlang.erl line 2687
   5: <P>: exits normally
   6: <P.2>: ok = <P.1> ! ok
    in monitor_demonitor.erl line 11
   7: <P.2>: #Ref<0.2584301936.2358771713.63019> = erlang:monitor(process, <P.1>)
    in monitor_demonitor.erl line 12
   8: <P.4>: #Ref<0.2584301936.2358771713.63021> = erlang:monitor(process, <P.3>)
    in monitor_demonitor.erl line 20
   9: <P.4>: ok = <P.3> ! ok
    in monitor_demonitor.erl line 21
  10: <P.1>: receives message (ok)
    in monitor_demonitor.erl line 9
  11: <P.1>: exits normally
  12: <P.1>: {'DOWN',#Ref<0.2584301936.2358771713.63019>,process,<P.1>,normal} = erlang:send(<P.2>, {'DOWN',#Ref<0.2584301936.2358771713.63019>,process,<P.1>,normal})
    (while exiting)
  13: <P.2>: receives message ({'DOWN',#Ref<0.2584301936.2358771713.63019>,process,<P.1>,normal})
    in monitor_demonitor.erl line 13
  14: <P.2>: exits normally
  15: <P.3>: receives message (ok)
    in monitor_demonitor.erl line 18
  16: <P.3>: exits normally
  17: <P.3>: {'DOWN',#Ref<0.2584301936.2358771713.63021>,process,<P.3>,normal} = erlang:send(<P.4>, {'DOWN',#Ref<0.2584301936.2358771713.63021>,process,<P.3>,normal})
    (while exiting)
  18: <P.4>: true = erlang:demonitor(#Ref<0.2584301936.2358771713.63021>)
    in monitor_demonitor.erl line 22
  19: <P.4>: receives message ({'DOWN',#Ref<0.2584301936.2358771713.63021>,process,<P.3>,normal})
    in monitor_demonitor.erl line 23
################################################################################
Interleaving #3
--------------------------------------------------------------------------------
Errors found:
* Blocked at a 'receive' ("deadlocked"; other processes have exited):
    <P.2> in monitor_demonitor.erl line 13
     Mailbox contents: [{'DOWN',#Ref<0.2584301936.2358771713.63019>,process,
                                <P.1>,noproc}]
--------------------------------------------------------------------------------
Event trace:
   1: <P>: <P.1> = erlang:spawn(erlang, apply, [#Fun<monitor_demonitor.0.38703729>,[]])
    in erlang.erl line 2687
   2: <P>: <P.2> = erlang:spawn(erlang, apply, [#Fun<monitor_demonitor.1.38703729>,[]])
    in erlang.erl line 2687
   3: <P>: <P.3> = erlang:spawn(erlang, apply, [#Fun<monitor_demonitor.2.38703729>,[]])
    in erlang.erl line 2687
   4: <P>: <P.4> = erlang:spawn(erlang, apply, [#Fun<monitor_demonitor.3.38703729>,[]])
    in erlang.erl line 2687
   5: <P>: exits normally
   6: <P.2>: ok = <P.1> ! ok
    in monitor_demonitor.erl line 11
   7: <P.4>: #Ref<0.2584301936.2358771713.63021> = erlang:monitor(process, <P.3>)
    in monitor_demonitor.erl line 20
   8: <P.4>: ok = <P.3> ! ok
    in monitor_demonitor.erl line 21
   9: <P.4>: true = erlang:demonitor(#Ref<0.2584301936.2358771713.63021>)
    in monitor_demonitor.erl line 22
  10: <P.4>: receive timeout expires after 0 ms
    in monitor_demonitor.erl line 23
  11: <P.4>: exits normally
  12: <P.1>: receives message (ok)
    in monitor_demonitor.erl line 9
  13: <P.3>: receives message (ok)
    in monitor_demonitor.erl line 18
  14: <P.3>: exits normally
  15: <P.3>: {'DOWN',#Ref<0.2584301936.2358771713.63021>,process,<P.3>,normal} = erlang:send(<P.4>, {'DOWN',#Ref<0.2584301936.2358771713.63021>,process,<P.3>,normal})
    (while exiting)
  16: <P.1>: exits normally
  17: <P.2>: #Ref<0.2584301936.2358771713.63019> = erlang:monitor(process, <P.1>)
    in monitor_demonitor.erl line 12
################################################################################
Interleaving #4
--------------------------------------------------------------------------------
Errors found:
* Blocked at a 'receive' ("deadlocked"; other processes have exited):
    <P.2> in monitor_demonitor.erl line 13
     Mailbox contents: [{'DOWN',#Ref<0.2584301936.2358771713.63019>,process,
                                <P.1>,noproc}]
    <P.4> in monitor_demonitor.erl line 25
     Mailbox contents: []
--------------------------------------------------------------------------------
Event trace:
   1: <P>: <P.1> = erlang:spawn(erlang, apply, [#Fun<monitor_demonitor.0.38703729>,[]])
    in erlang.erl line 2687
   2: <P>: <P.2> = erlang:spawn(erlang, apply, [#Fun<monitor_demonitor.1.38703729>,[]])
    in erlang.erl line 2687
   3: <P>: <P.3> = erlang:spawn(erlang, apply, [#Fun<monitor_demonitor.2.38703729>,[]])
    in erlang.erl line 2687
   4: <P>: <P.4> = erlang:spawn(erlang, apply, [#Fun<monitor_demonitor.3.38703729>,[]])
    in erlang.erl line 2687
   5: <P>: exits normally
   6: <P.2>: ok = <P.1> ! ok
    in monitor_demonitor.erl line 11
   7: <P.4>: #Ref<0.2584301936.2358771713.63021> = erlang:monitor(process, <P.3>)
    in monitor_demonitor.erl line 20
   8: <P.4>: ok = <P.3> ! ok
    in monitor_demonitor.erl line 21
   9: <P.1>: receives message (ok)
    in monitor_demonitor.erl line 9
  10: <P.3>: receives message (ok)
    in monitor_demonitor.erl line 18
  11: <P.3>: exits normally
  12: <P.3>: {'DOWN',#Ref<0.2584301936.2358771713.63021>,process,<P.3>,normal} = erlang:send(<P.4>, {'DOWN',#Ref<0.2584301936.2358771713.63021>,process,<P.3>,normal})
    (while exiting)
  13: <P.4>: true = erlang:demonitor(#Ref<0.2584301936.2358771713.63021>)
    in monitor_demonitor.erl line 22
  14: <P.4>: receives message ({'DOWN',#Ref<0.2584301936.2358771713.63021>,process,<P.3>,normal})
    in monitor_demonitor.erl line 23
  15: <P.1>: exits normally
  16: <P.2>: #Ref<0.2584301936.2358771713.63019> = erlang:monitor(process, <P.1>)
    in monitor_demonitor.erl line 12
################################################################################
Exploration completed!
################################################################################
Warnings:
--------------------------------------------------------------------------------
* Concuerror may let exiting processes emit 'DOWN' messages for cancelled monitors. Any such messages are discarded upon delivery and can never be received.

################################################################################
Tips:
--------------------------------------------------------------------------------
* Check `--help attributes' for info on how to pass options via module attributes.
* Running without a scheduling_bound corresponds to verification and may take a long time.
* Increase '--print_depth' if output/graph contains "...".

################################################################################
Info:
--------------------------------------------------------------------------------
* Writing results in /Users/stavros.aronis/git/Concuerror/tests/results/basic_tests/results/monitor_demonitor-monitor_demonitor-inf-dpor.txt
* Automatically instrumented module io_lib
* Showing PIDs as "<symbolic name(/last registered name)>" ('-h symbolic_names').
* Instrumented & loaded module monitor_demonitor
* Automatically instrumented module erlang
* You can see pairs of racing instructions (in the report and '--graph') with '--show_races true'
* Continuing after error (-k)

################################################################################
Done at 17 Aug 2018 17:03:24 (Exit status: error)
  Summary: 3 errors, 4/4 interleavings explored
